# Brazilian Portuguese translation.
# Copyright (C) 2020
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR ctadeu@gmail.com, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: EMAIL\n"
"POT-Creation-Date: 2017-03-14 21:32-0700\n"
"PO-Revision-Date: 2020-12-11 17:03+0100\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"
"Last-Translator: Carlos Panato <ctadeu@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Language: pt_BR\n"
"X-Poedit-KeywordsList: \n"

#: pkg/kubectl/cmd/create_clusterrolebinding.go:35
msgid ""
"\n"
"\t\t  # Create a ClusterRoleBinding for user1, user2, and group1 using the cluster-admin "
"ClusterRole\n"
"\t\t  kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-admin --user=user1 --"
"user=user2 --group=group1"
msgstr ""
"\n"
"\t\t  # Criar o ClusterRoleBinding para user1, user2, e group1 utilizando o ClusterRole cluster-"
"admin\n"
"\t\t  kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-admin —user=user1 —"
"user=user2 —group=group1"

#: pkg/kubectl/cmd/create_rolebinding.go:35
msgid ""
"\n"
"\t\t  # Create a RoleBinding for user1, user2, and group1 using the admin ClusterRole\n"
"\t\t  kubectl create rolebinding admin --clusterrole=admin --user=user1 --user=user2 --"
"group=group1"
msgstr ""
"\n"
"\t\t  # Criar uma RoleBinding para user1, user2, e group1 utilizando o admin ClusterRole\n"
"\t\t  kubectl create rolebinding admin --clusterrole=admin —user=user1 —user=user2 —group=group1"

#: pkg/kubectl/cmd/create_configmap.go:44
msgid ""
"\n"
"\t\t  # Create a new configmap named my-config based on folder bar\n"
"\t\t  kubectl create configmap my-config --from-file=path/to/bar\n"
"\n"
"\t\t  # Create a new configmap named my-config with specified keys instead of file basenames on "
"disk\n"
"\t\t  kubectl create configmap my-config --from-file=key1=/path/to/bar/file1.txt --from-"
"file=key2=/path/to/bar/file2.txt\n"
"\n"
"\t\t  # Create a new configmap named my-config with key1=config1 and key2=config2\n"
"\t\t  kubectl create configmap my-config --from-literal=key1=config1 --from-literal=key2=config2"
msgstr ""
"\n"
"\t\t  # Criar um novo configmap com o nome de my-config baseado na pasta bar\n"
"\t\t  kubectl create configmap my-config —from-file=path/to/bar\n"
"\n"
"\t\t  # Cria um novo configmap com o nome my-config, onde cada chave possui o valor especificado "
"em um arquivo distinto no disco\n"
"\t\t  kubectl create configmap my-config —from-file=key1=/path/to/bar/file1.txt —from-file=key2=/"
"path/to/bar/file2.txt\n"
"\n"
"\t\t  # Criar um novo configmap com o nome de my-config com key1=config1 e key2=config2\n"
"\t\t  kubectl create configmap my-config —from-literal=key1=config1 —from-literal=key2=config2"

#: pkg/kubectl/cmd/create_secret.go:135
msgid ""
"\n"
"\t\t  # If you don't already have a .dockercfg file, you can create a dockercfg secret directly "
"by using:\n"
"\t\t  kubectl create secret docker-registry my-secret --docker-server=DOCKER_REGISTRY_SERVER --"
"docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL"
msgstr ""
"\n"
"\t\t  # Se você ainda não tem o arquivo .dockercfg, você pode gerar diretamente o dockercfg "
"secret utilizando o comando:\n"
"\t\t  kubectl create secret docker-registry my-secret —docker-server=DOCKER_REGISTRY_SERVER —"
"docker-username=DOCKER_USER —docker-password=DOCKER_PASSWORD —docker-email=DOCKER_EMAIL"

#: pkg/kubectl/cmd/top_node.go:65
msgid ""
"\n"
"\t\t  # Show metrics for all nodes\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t  # Show metrics for a given node\n"
"\t\t  kubectl top node NODE_NAME"
msgstr ""
"\n"
"\t\t  # Mostra as métricas para todos os nodes\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t  # Mostra as métricas para um node específico\n"
"\t\t  kubectl top node NODE_NAME"

#: pkg/kubectl/cmd/apply.go:84
msgid ""
"\n"
"\t\t# Apply the configuration in pod.json to a pod.\n"
"\t\tkubectl apply -f ./pod.json\n"
"\n"
"\t\t# Apply the JSON passed into stdin to a pod.\n"
"\t\tcat pod.json | kubectl apply -f -\n"
"\n"
"\t\t# Note: --prune is still in Alpha\n"
"\t\t# Apply the configuration in manifest.yaml that matches label app=nginx and delete all the "
"other resources that are not in the file and match label app=nginx.\n"
"\t\tkubectl apply --prune -f manifest.yaml -l app=nginx\n"
"\n"
"\t\t# Apply the configuration in manifest.yaml and delete all the other configmaps that are not "
"in the file.\n"
"\t\tkubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/ConfigMap"
msgstr ""
"\n"
"\t\t# Aplica a configuração do arquivo pod.json a um pod.\n"
"\t\tkubectl apply -f ./pod.json\n"
"\n"
"\t\t# Aplica o JSON recebido via stdin para um pod.\n"
"\t\tcat pod.json | kubectl apply -f -\n"
"\n"
"\t\t# Nota: —prune ainda está em Alpha\n"
"\t\t# Aplica a configuração do manifest.yaml que conter o label app=nginx e remove todos os "
"outros recursos que não estejam no arquivo e não contenham o label.\n"
"\t\tkubectl apply —prune -f manifest.yaml -l app=nginx\n"
"\n"
"\t\t# Aplica a configuração do manifest.yaml e remove todos os outros configmaps que não estão "
"no arquivo.\n"
"\t\tkubectl apply —prune -f manifest.yaml —all —prune-whitelist=core/v1/ConfigMap"

#: pkg/kubectl/cmd/autoscale.go:40
#, c-format
msgid ""
"\n"
"\t\t# Auto scale a deployment \"foo\", with the number of pods between 2 and 10, no target CPU "
"utilization specified so a default autoscaling policy will be used:\n"
"\t\tkubectl autoscale deployment foo --min=2 --max=10\n"
"\n"
"\t\t# Auto scale a replication controller \"foo\", with the number of pods between 1 and 5, "
"target CPU utilization at 80%:\n"
"\t\tkubectl autoscale rc foo --max=5 --cpu-percent=80"
msgstr ""
"\n"
"\t\t# Escala automaticamente um deployment \"foo\", com o número de pods entre 2 e 10, sem "
"especificar a utilização da CPU o padrão da política de autoscaling será utilizado:\n"
"\t\tkubectl autoscale deployment foo —min=2 —max=10\n"
"\n"
"\t\t# Escala automaticamente um replication controller \"foo\", com o número de pods entre 1 and "
"5, e definindo a utilização da CPU em 80%:\n"
"\t\tkubectl autoscale rc foo —max=5 —cpu-percent=80"

#: pkg/kubectl/cmd/convert.go:49
msgid ""
"\n"
"\t\t# Convert 'pod.yaml' to latest version and print to stdout.\n"
"\t\tkubectl convert -f pod.yaml\n"
"\n"
"\t\t# Convert the live state of the resource specified by 'pod.yaml' to the latest version\n"
"\t\t# and print to stdout in json format.\n"
"\t\tkubectl convert -f pod.yaml --local -o json\n"
"\n"
"\t\t# Convert all files under current directory to latest version and create them all.\n"
"\t\tkubectl convert -f . | kubectl create -f -"
msgstr ""
"\n"
"\t\t# converte o arquivo 'pod.yaml' para a versão mais atual e imprime a saída para o stdout.\n"
"\t\tkubectl convert -f pod.yaml\n"
"\n"
"\t\t# Converte o estado atual do recurso especificado pelo 'pod.yaml' para a versão mais atual\n"
"\t\t# e imprime a saída para o stdout no formato json.\n"
"\t\tkubectl convert -f pod.yaml —local -o json\n"
"\n"
"\t\t# Converte todos os arquivos dentro do diretório atual para a versão mais recente e cria "
"todos.\n"
"\t\tkubectl convert -f . | kubectl create -f -"

#: pkg/kubectl/cmd/create_clusterrole.go:34
msgid ""
"\n"
"\t\t# Create a ClusterRole named \"pod-reader\" that allows user to perform \"get\", \"watch\" "
"and \"list\" on pods\n"
"\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --resource=pods\n"
"\n"
"\t\t# Create a ClusterRole named \"pod-reader\" with ResourceName specified\n"
"\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --resource=pods --resource-"
"name=readablepod"
msgstr ""
"\n"
"\t\t# Cria um ClusterRole com o nome de \"pod-reader\" que permite o usuário realizar \"get\", "
"\"watch\" e \"list\" em pods\n"
"\t\tkubectl create clusterrole pod-reader —verb=get,list,watch —resource=pods\n"
"\n"
"\t\t# Cria a ClusterRole com o nome de \"pod-reader\" com um ResourceName especificado\n"
"\t\tkubectl create clusterrole pod-reader —verb=get,list,watch —resource=pods —resource-"
"name=readablepod"

#: pkg/kubectl/cmd/create_role.go:41
msgid ""
"\n"
"\t\t# Create a Role named \"pod-reader\" that allows user to perform \"get\", \"watch\" and "
"\"list\" on pods\n"
"\t\tkubectl create role pod-reader --verb=get --verb=list --verb=watch --resource=pods\n"
"\n"
"\t\t# Create a Role named \"pod-reader\" with ResourceName specified\n"
"\t\tkubectl create role pod-reader --verb=get --verg=list --verb=watch --resource=pods --"
"resource-name=readablepod"
msgstr ""
"\n"
"\t\t# Cria uma Role com o nome de \"pod-reader\" que permite o usuário realizar \"get\", \"watch"
"\" e \"list\" em pods\n"
"\t\tkubectl create role pod-reader —verb=get —verb=list —verb=watch —resource=pods\n"
"\n"
"\t\t# Cria uma Role com o nome de \"pod-reader\" com um ResourceName especificado\n"
"\t\tkubectl create role pod-reader —verb=get —verg=list —verb=watch —resource=pods —resource-"
"name=readablepod"

#: pkg/kubectl/cmd/create_quota.go:35
msgid ""
"\n"
"\t\t# Create a new resourcequota named my-quota\n"
"\t\tkubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,services=3,"
"replicationcontrollers=2,resourcequotas=1,secrets=5,persistentvolumeclaims=10\n"
"\n"
"\t\t# Create a new resourcequota named best-effort\n"
"\t\tkubectl create quota best-effort --hard=pods=100 --scopes=BestEffort"
msgstr ""
"\n"
"\t\t# Cria um novo resourcequota com o nome de my-quota\n"
"\t\tkubectl create quota my-quota —hard=cpu=1,memory=1G,pods=2,services=3,"
"replicationcontrollers=2,resourcequotas=1,secrets=5,persistentvolumeclaims=10\n"
"\n"
"\t\t# Cria um novo resourcequota com o nome de best-effort\n"
"\t\tkubectl create quota best-effort —hard=pods=100 —scopes=BestEffort"

#: pkg/kubectl/cmd/create_pdb.go:35
#, c-format
msgid ""
"\n"
"\t\t# Create a pod disruption budget named my-pdb that will select all pods with the app=rails "
"label\n"
"\t\t# and require at least one of them being available at any point in time.\n"
"\t\tkubectl create poddisruptionbudget my-pdb --selector=app=rails --min-available=1\n"
"\n"
"\t\t# Create a pod disruption budget named my-pdb that will select all pods with the app=nginx "
"label\n"
"\t\t# and require at least half of the pods selected to be available at any point in time.\n"
"\t\tkubectl create pdb my-pdb --selector=app=nginx --min-available=50%"
msgstr ""
"\n"
"\t\t# Cria um pod disruption budget com o nome de my-pdb que irá selecionar todos os pods com o "
"label app=rails\n"
"\t\t# e requer que pelo menos um deles esteja disponível a qualquer momento.\n"
"\t\tkubectl create poddisruptionbudget my-pdb —selector=app=rails —min-available=1\n"
"\n"
"\t\t# Cria um pod disruption budget com o nome de my-pdb que irá selecionar todos os pods com o "
"label app=nginx\n"
"\t\t# e requer pelo menos que metade dos pods selecionados estejam disponíveis em qualquer "
"momento.\n"
"\t\tkubectl create pdb my-pdb —selector=app=nginx —min-available=50%"

#: pkg/kubectl/cmd/create.go:47
msgid ""
"\n"
"\t\t# Create a pod using the data in pod.json.\n"
"\t\tkubectl create -f ./pod.json\n"
"\n"
"\t\t# Create a pod based on the JSON passed into stdin.\n"
"\t\tcat pod.json | kubectl create -f -\n"
"\n"
"\t\t# Edit the data in docker-registry.yaml in JSON using the v1 API format then create the "
"resource using the edited data.\n"
"\t\tkubectl create -f docker-registry.yaml --edit --output-version=v1 -o json"
msgstr ""
"\n"
"\t\t# Cria um pod utilizando o arquivo pod.json.\n"
"\t\tkubectl create -f ./pod.json\n"
"\n"
"\t\t# Cria um pod utilizando o JSON recebido via stdin.\n"
"\t\tcat pod.json | kubectl create -f -\n"
"\n"
"\t\t# Edita o conteúdo do arquivo docker-registry.yaml em JSON utilizando o formato da API v1, "
"criando o recurso com o conteúdo editado.\n"
"\t\tkubectl create -f docker-registry.yaml —edit —output-version=v1 -o json"

#: pkg/kubectl/cmd/expose.go:53
msgid ""
"\n"
"\t\t# Create a service for a replicated nginx, which serves on port 80 and connects to the "
"containers on port 8000.\n"
"\t\tkubectl expose rc nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for a replication controller identified by type and name specified in "
"\"nginx-controller.yaml\", which serves on port 80 and connects to the containers on port 8000.\n"
"\t\tkubectl expose -f nginx-controller.yaml --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for a pod valid-pod, which serves on port 444 with the name \"frontend\"\n"
"\t\tkubectl expose pod valid-pod --port=444 --name=frontend\n"
"\n"
"\t\t# Create a second service based on the above service, exposing the container port 8443 as "
"port 443 with the name \"nginx-https\"\n"
"\t\tkubectl expose service nginx --port=443 --target-port=8443 --name=nginx-https\n"
"\n"
"\t\t# Create a service for a replicated streaming application on port 4100 balancing UDP traffic "
"and named 'video-stream'.\n"
"\t\tkubectl expose rc streamer --port=4100 --protocol=udp --name=video-stream\n"
"\n"
"\t\t# Create a service for a replicated nginx using replica set, which serves on port 80 and "
"connects to the containers on port 8000.\n"
"\t\tkubectl expose rs nginx --port=80 --target-port=8000\n"
"\n"
"\t\t# Create a service for an nginx deployment, which serves on port 80 and connects to the "
"containers on port 8000.\n"
"\t\tkubectl expose deployment nginx --port=80 --target-port=8000"
msgstr ""
"\n"
"\t\t# Cria um serviço para um nginx replicado, que escuta na porta 80 e conecta na porta 8000 "
"dos containers.\n"
"\\t\tkubectl expose rc nginx —port=80 —target-port=8000\n"
"\n"
"\t\t# Cria um serviço para um replication controller identificado por tipo e com o nome "
"especificado em \"nginx-controller.yaml\", que escuta na porta 80 e conecta na porta 8000 dos "
"containers.\n"
"\t\tkubectl expose -f nginx-controller.yaml —port=80 —target-port=8000\n"
"\n"
"\t\t# Cria um serviço para um pod valid-pod, que escuta na porta 444 com o nome \"frontend\"\n"
"\t\tkubectl expose pod valid-pod —port=444 —name=frontend\n"
"\n"
"\t\t# Cria um segundo serviço baseado no serviço acima, expondo a porta 8443 do container como "
"porta 443 e com nome \"nginx-https\"\n"
"\t\tkubectl expose service nginx —port=443 —target-port=8443 —name=nginx-https\n"
"\n"
"\t\t# Cria um serviço para uma aplicação streaming replicada na porta 4100 com trafico "
"balanceado UDP e nome 'video-stream'.\n"
"\t\tkubectl expose rc streamer —port=4100 —protocol=udp —name=video-stream\n"
"\n"
"\t\t# Cria um serviço para um nginx replicado usando o replica set, que escuta na porta 80 e "
"conecta na porta 8000 dos containers.\n"
"\t\tkubectl expose rs nginx —port=80 —target-port=8000\n"
"\n"
"\t\t# Cria um serviço para um deployment nginx, que escuta na porta 80 e conecta na porta 8000 "
"dos containers.\n"
"\t\tkubectl expose deployment nginx —port=80 —target-port=8000"

#: pkg/kubectl/cmd/delete.go:68
msgid ""
"\n"
"\t\t# Delete a pod using the type and name specified in pod.json.\n"
"\t\tkubectl delete -f ./pod.json\n"
"\n"
"\t\t# Delete a pod based on the type and name in the JSON passed into stdin.\n"
"\t\tcat pod.json | kubectl delete -f -\n"
"\n"
"\t\t# Delete pods and services with same names \"baz\" and \"foo\"\n"
"\t\tkubectl delete pod,service baz foo\n"
"\n"
"\t\t# Delete pods and services with label name=myLabel.\n"
"\t\tkubectl delete pods,services -l name=myLabel\n"
"\n"
"\t\t# Delete a pod with minimal delay\n"
"\t\tkubectl delete pod foo --now\n"
"\n"
"\t\t# Force delete a pod on a dead node\n"
"\t\tkubectl delete pod foo --grace-period=0 --force\n"
"\n"
"\t\t# Delete all pods\n"
"\t\tkubectl delete pods --all"
msgstr ""
"\n"
"\t\t# Remove um pod usando o tipo e nome especificado no arquivo pod.json.\n"
"\t\tkubectl delete -f ./pod.json\n"
"\n"
"\t\t# Remove um pod baseado no tipo e nome no JSON passado na entrada de comando(stdin).\n"
"\t\tcat pod.json | kubectl delete -f -\n"
"\n"
"\t\t# Remove pods e serviços com os nomes \"baz\" e \"foo\"\n"
"\t\tkubectl delete pod,service baz foo\n"
"\n"
"\t\t# Remove pods e serviços com label name=myLabel.\n"
"\t\tkubectl delete pods,services -l name=myLabel\n"
"\n"
"\t\t# Remove um pod com um mínimo de delay\n"
"\t\tkubectl delete pod foo —now\n"
"\n"
"\t\t# Força a remoção de  um pod em um node morto\n"
"\t\tkubectl delete pod foo —grace-period=0 —force\n"
"\n"
"\t\t# Remove todos os pods\n"
"\t\tkubectl delete pods —all"

#: pkg/kubectl/cmd/describe.go:54
msgid ""
"\n"
"\t\t# Describe a node\n"
"\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
"\n"
"\t\t# Describe a pod\n"
"\t\tkubectl describe pods/nginx\n"
"\n"
"\t\t# Describe a pod identified by type and name in \"pod.json\"\n"
"\t\tkubectl describe -f pod.json\n"
"\n"
"\t\t# Describe all pods\n"
"\t\tkubectl describe pods\n"
"\n"
"\t\t# Describe pods by label name=myLabel\n"
"\t\tkubectl describe po -l name=myLabel\n"
"\n"
"\t\t# Describe all pods managed by the 'frontend' replication controller (rc-created pods\n"
"\t\t# get the name of the rc as a prefix in the pod the name).\n"
"\t\tkubectl describe pods frontend"
msgstr ""
"\n"
"\t\t# Descreve um node\n"
"\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
"\n"
"\t\t# Descreve um pod\n"
"\t\tkubectl describe pods/nginx\n"
"\n"
"\t\t# Descreve um pod identificado pelo tipo e nome no arquivo \"pod.json\"\n"
"\t\tkubectl describe -f pod.json\n"
"\n"
"\t\t# Descreve todos os pods\n"
"\t\tkubectl describe pods\n"
"\n"
"\t\t# Descreve os pods com label name=myLabel\n"
"\t\tkubectl describe po -l name=myLabel\n"
"\n"
"\t\t# Descreve todos os pods gerenciados pelo replication controller 'frontend' (rc-created "
"pods\n"
"\t\t# tem o nome de rc como prefixo no nome do pod).\n"
"\t\tkubectl describe pods frontend"

#: pkg/kubectl/cmd/drain.go:165
msgid ""
"\n"
"\t\t# Drain node \"foo\", even if there are pods not managed by a ReplicationController, "
"ReplicaSet, Job, DaemonSet or StatefulSet on it.\n"
"\t\t$ kubectl drain foo --force\n"
"\n"
"\t\t# As above, but abort if there are pods not managed by a ReplicationController, ReplicaSet, "
"Job, DaemonSet or StatefulSet, and use a grace period of 15 minutes.\n"
"\t\t$ kubectl drain foo --grace-period=900"
msgstr ""
"\n"
"\t\t# Drena o node \"foo\", mesmo se os pods não são gerenciados por um ReplicationController, "
"ReplicaSet, Job, DaemonSet ou StatefulSet.\n"
"\t\t$ kubectl drain foo —force\n"
"\n"
"\t\t# Mesmo que acima, mas é interrompido se os pods não são gerenciados por um "
"ReplicationController, ReplicaSet, Job, DaemonSet ou StatefulSet, e tem espera por 15 minutos.\n"
"\t\t$ kubectl drain foo —grace-period=900"

#: pkg/kubectl/cmd/edit.go:80
msgid ""
"\n"
"\t\t# Edit the service named 'docker-registry':\n"
"\t\tkubectl edit svc/docker-registry\n"
"\n"
"\t\t# Use an alternative editor\n"
"\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
"\n"
"\t\t# Edit the job 'myjob' in JSON using the v1 API format:\n"
"\t\tkubectl edit job.v1.batch/myjob -o json\n"
"\n"
"\t\t# Edit the deployment 'mydeployment' in YAML and save the modified config in its "
"annotation:\n"
"\t\tkubectl edit deployment/mydeployment -o yaml --save-config"
msgstr ""
"\n"
"\t\t# Edita o serviço chamado 'docker-registry':\n"
"\t\tkubectl edit svc/docker-registry\n"
"\n"
"\t\t# Usa um editor alternativo\n"
"\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
"\n"
"\t\t# Edita o Job 'myjob' em JSON utilizando o format da API v1:\n"
"\t\tkubectl edit job.v1.batch/myjob -o json\n"
"\n"
"\t\t# Edita o deployment 'mydeployment' em YAML e salva a configuração modificada em sua "
"annotation:\n"
"\t\tkubectl edit deployment/mydeployment -o yaml —save-config"

#: pkg/kubectl/cmd/exec.go:41
msgid ""
"\n"
"\t\t# Get output from running 'date' from pod 123456-7890, using the first container by default\n"
"\t\tkubectl exec 123456-7890 date\n"
"\n"
"\t\t# Get output from running 'date' in ruby-container from pod 123456-7890\n"
"\t\tkubectl exec 123456-7890 -c ruby-container date\n"
"\n"
"\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-container from pod 123456-7890\n"
"\t\t# and sends stdout/stderr from 'bash' back to the client\n"
"\t\tkubectl exec 123456-7890 -c ruby-container -i -t -- bash -il"
msgstr ""
"\n"
"\t\t# Pega a saída de execução do comando 'date' do pod 123456-7890, usando o primeiro container "
"por padrão\n"
"\t\tkubectl exec 123456-7890 date\n"
"\n"
"\t\t# Pega a saída de execução do comando 'date' no ruby-container do pod 123456-7890\n"
"\t\tkubectl exec 123456-7890 -c ruby-container date\n"
"\n"
"\t\t# Troca para raw terminal mode, envia stdin para o 'bash' no ruby-container do pod "
"123456-7890\n"
"\t\t# e envia stdout/stderr do 'bash' de volta para o cliente\n"
"\t\tkubectl exec 123456-7890 -c ruby-container -i -t — bash -il"

#: pkg/kubectl/cmd/attach.go:42
msgid ""
"\n"
"\t\t# Get output from running pod 123456-7890, using the first container by default\n"
"\t\tkubectl attach 123456-7890\n"
"\n"
"\t\t# Get output from ruby-container from pod 123456-7890\n"
"\t\tkubectl attach 123456-7890 -c ruby-container\n"
"\n"
"\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-container from pod 123456-7890\n"
"\t\t# and sends stdout/stderr from 'bash' back to the client\n"
"\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
"\n"
"\t\t# Get output from the first pod of a ReplicaSet named nginx\n"
"\t\tkubectl attach rs/nginx\n"
"\t\t"
msgstr ""
"\n"
"\t\t# Pega a saída do pod em execução 123456-7890, utilizando o primeiro container por padrão\n"
"\t\tkubectl attach 123456-7890\n"
"\n"
"\t\t# Pega a saída do ruby-container do pod 123456-7890\n"
"\t\tkubectl attach 123456-7890 -c ruby-container\n"
"\n"
"\t\t# Troca para raw terminal mode, envia stdin para o 'bash' no ruby-container do pod "
"123456-7890\n"
"\t\t# e envia stdout/stderr do 'bash' de volta para o cliente\n"
"\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
"\n"
"\t\t# Pega a saída do primeiro pod de um ReplicaSet chamado nginx\n"
"\t\tkubectl attach rs/nginx\n"
"\t\t"

#: pkg/kubectl/cmd/explain.go:39
msgid ""
"\n"
"\t\t# Get the documentation of the resource and its fields\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# Get the documentation of a specific field of a resource\n"
"\t\tkubectl explain pods.spec.containers"
msgstr ""
"\n"
"\t\t# Mostra a documentação do recurso e seus campos\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# Mostra a documentação de um campo específico de um recurso\n"
"\t\tkubectl explain pods.spec.containers"

#: pkg/kubectl/cmd/completion.go:65
msgid ""
"\n"
"\t\t# Install bash completion on a Mac using homebrew\n"
"\t\tbrew install bash-completion\n"
"\t\tprintf \"\n"
"# Bash completion support\n"
"source $(brew --prefix)/etc/bash_completion\n"
"\" >> $HOME/.bash_profile\n"
"\t\tsource $HOME/.bash_profile\n"
"\n"
"\t\t# Load the kubectl completion code for bash into the current shell\n"
"\t\tsource <(kubectl completion bash)\n"
"\n"
"\t\t# Write bash completion code to a file and source if from .bash_profile\n"
"\t\tkubectl completion bash > ~/.kube/completion.bash.inc\n"
"\t\tprintf \"\n"
"# Kubectl shell completion\n"
"source '$HOME/.kube/completion.bash.inc'\n"
"\" >> $HOME/.bash_profile\n"
"\t\tsource $HOME/.bash_profile\n"
"\n"
"\t\t# Load the kubectl completion code for zsh[1] into the current shell\n"
"\t\tsource <(kubectl completion zsh)"
msgstr ""
"\n"
"\t\t# Instala o auto completar do bash no Mac utilizando homebrew\n"
"\t\tbrew install bash-completion\n"
"\t\tprintf \"\n"
"# Bash completion support\n"
"source $(brew —prefix)/etc/bash_completion\n"
"\" >> $HOME/.bash_profile\n"
"\t\tsource $HOME/.bash_profile\n"
"\n"
"\t\t# Carrega o código de auto complentar do kubectl para o bash no shell corrente\n"
"\t\tsource <(kubectl completion bash)\n"
"\n"
"\t\t# Escreve o código de autocompletar do bash no arquivo de perfil e faz o source se é para o ."
"bash_profile\n"
"\t\tkubectl completion bash > ~/.kube/completion.bash.inc\n"
"\t\tprintf \"\n"
"# Kubectl shell completion\n"
"source '$HOME/.kube/completion.bash.inc'\n"
"\" >> $HOME/.bash_profile\n"
"\t\tsource $HOME/.bash_profile\n"
"\n"
"\t\t# Carrega o código de auto complentar do kubectl para zsh[1] no shell em utilização\n"
"\t\tsource <(kubectl completion zsh)"

#: pkg/kubectl/cmd/get.go:64
msgid ""
"\n"
"\t\t# List all pods in ps output format.\n"
"\t\tkubectl get pods\n"
"\n"
"\t\t# List all pods in ps output format with more information (such as node name).\n"
"\t\tkubectl get pods -o wide\n"
"\n"
"\t\t# List a single replication controller with specified NAME in ps output format.\n"
"\t\tkubectl get replicationcontroller web\n"
"\n"
"\t\t# List a single pod in JSON output format.\n"
"\t\tkubectl get -o json pod web-pod-13je7\n"
"\n"
"\t\t# List a pod identified by type and name specified in \"pod.yaml\" in JSON output format.\n"
"\t\tkubectl get -f pod.yaml -o json\n"
"\n"
"\t\t# Return only the phase value of the specified pod.\n"
"\t\tkubectl get -o template pod/web-pod-13je7 --template={{.status.phase}}\n"
"\n"
"\t\t# List all replication controllers and services together in ps output format.\n"
"\t\tkubectl get rc,services\n"
"\n"
"\t\t# List one or more resources by their type and names.\n"
"\t\tkubectl get rc/web service/frontend pods/web-pod-13je7\n"
"\n"
"\t\t# List all resources with different types.\n"
"\t\tkubectl get all"
msgstr ""
"\n"
"\t\t# Lista todos os pods no formato de saída ps.\n"
"\t\tkubectl get pods\n"
"\n"
"\t\t# Lista todos os pods no formato de saída ps com mais informações (como o nome do node).\n"
"\t\tkubectl get pods -o wide\n"
"\n"
"\t\t# Lista um único replication controller com o nome especificado no formato de saída ps\n"
"\t\tkubectl get replicationcontroller web\n"
"\n"
"\t\t# Lista um único pod e usa o formato de saída JSON.\n"
"\t\tkubectl get -o json pod web-pod-13je7\n"
"\n"
"\t\t# Lista o pod identificado com o tipo e nome especificado no \"pod.yaml\" e usa o formato de "
"saída JSON.\n"
"\t\tkubectl get -f pod.yaml -o json\n"
"\n"
"\t\t# Mostra apenas em que estágio o pod especificado está.\n"
"\t\tkubectl get -o template pod/web-pod-13je7 —template={{.status.phase}}\n"
"\n"
"\t\t# Lista todos os replication controllers e services juntos no formato de saída ps.\n"
"\t\tkubectl get rc,services\n"
"\n"
"\t\t# Lista um ou mais recursos pelo seu tipo e nomes.\n"
"\t\tkubectl get rc/web service/frontend pods/web-pod-13je7\n"
"\n"
"\t\t# Lista todos os recursos e com tipos diferentes.\n"
"\t\tkubectl get all"

#: pkg/kubectl/cmd/portforward.go:53
msgid ""
"\n"
"\t\t# Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the "
"pod\n"
"\t\tkubectl port-forward mypod 5000 6000\n"
"\n"
"\t\t# Listen on port 8888 locally, forwarding to 5000 in the pod\n"
"\t\tkubectl port-forward mypod 8888:5000\n"
"\n"
"\t\t# Listen on a random port locally, forwarding to 5000 in the pod\n"
"\t\tkubectl port-forward mypod :5000\n"
"\n"
"\t\t# Listen on a random port locally, forwarding to 5000 in the pod\n"
"\t\tkubectl port-forward mypod 0:5000"
msgstr ""
"\n"
"\t\t# Escuta nas portas locais 5000 e 6000, e redireciona os dados de/para as portas 5000 e 6000 "
"no pod\n"
"\t\tkubectl port-forward mypod 5000 6000\n"
"\n"
"\t\t# Escuta na porta local 8888 localmente, e redireciona para a porta 5000 no pod\n"
"\t\tkubectl port-forward mypod 8888:5000\n"
"\n"
"\t\t# Escuta uma porta local aleatória, e redireciona para a porta 5000 no pod\n"
"\t\tkubectl port-forward mypod :5000\n"
"\n"
"\t\t# Escuta uma porta local aleatória, e redireciona para a porta 5000 no pod\\n\n"
"\t\tkubectl port-forward mypod 0:5000"

#: pkg/kubectl/cmd/drain.go:118
msgid ""
"\n"
"\t\t# Mark node \"foo\" as schedulable.\n"
"\t\t$ kubectl uncordon foo"
msgstr ""
"\n"
"\t\t# Remove a restrição de execução de Pods no node \"foo\".\n"
"\t\t$ kubectl uncordon foo"

#: pkg/kubectl/cmd/drain.go:93
msgid ""
"\n"
"\t\t# Mark node \"foo\" as unschedulable.\n"
"\t\tkubectl cordon foo"
msgstr ""
"\n"
"\t\t# Restringe a execução de novos Pods no node \"foo\".\n"
"\t\tkubectl cordon foo"

#: pkg/kubectl/cmd/patch.go:66
msgid ""
"\n"
"\t\t# Partially update a node using strategic merge patch\n"
"\t\tkubectl patch node k8s-node-1 -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Partially update a node identified by the type and name specified in \"node.json\" using "
"strategic merge patch\n"
"\t\tkubectl patch -f node.json -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Update a container's image; spec.containers[*].name is required because it's a merge key\n"
"\t\tkubectl patch pod valid-pod -p '{\"spec\":{\"containers\":[{\"name\":\"kubernetes-serve-"
"hostname\",\"image\":\"new image\"}]}}'\n"
"\n"
"\t\t# Update a container's image using a json patch with positional arrays\n"
"\t\tkubectl patch pod valid-pod --type='json' -p='[{\"op\": \"replace\", \"path\": \"/spec/"
"containers/0/image\", \"value\":\"new image\"}]'"
msgstr ""
"\n"
"\t\t# Atualiza parcialmente um node utilizando a estratégia merge patch\n"
"\t\tkubectl patch node k8s-node-1 -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Atualiza parcialmente um node identificado pelo tipo e nome no arquivo \"node.json\" "
"utilizando a estratégia merge patch\n"
"\t\tkubectl patch -f node.json -p '{\"spec\":{\"unschedulable\":true}}'\n"
"\n"
"\t\t# Atualiza uma imagem em um container; spec.containers[*].name é requerido pois será usado "
"como índice para a mudança\n"
"\t\tkubectl patch pod valid-pod -p '{\"spec\":{\"containers\":[{\"name\":\"kubernetes-serve-"
"hostname\",\"image\":\"new image\"}]}}'\n"
"\n"
"\t\t# Atualiza uma imagem em um container utilizando o json patch com positional arrays\n"
"\t\tkubectl patch pod valid-pod —type='json' -p='[{\"op\": \"replace\", \"path\": \"/spec/"
"containers/0/image\", \"value\":\"new image\"}]'"

#: pkg/kubectl/cmd/options.go:29
msgid ""
"\n"
"\t\t# Print flags inherited by all commands\n"
"\t\tkubectl options"
msgstr ""
"\n"
"\t\t# Mostra as opções herdadas por todos os comandos\n"
"\t\tkubectl options"

#: pkg/kubectl/cmd/clusterinfo.go:41
msgid ""
"\n"
"\t\t# Print the address of the master and cluster services\n"
"\t\tkubectl cluster-info"
msgstr ""
"\n"
"\t\t# Mostra o endereço do servidor de gerenciamento e dos serviços do cluster\n"
"\t\tkubectl cluster-info"

#: pkg/kubectl/cmd/version.go:32
msgid ""
"\n"
"\t\t# Print the client and server versions for the current context\n"
"\t\tkubectl version"
msgstr ""
"\n"
"\t\t# Imprime a versão do cliente e do servidor para o contexto atual\n"
"\t\tkubectl version"

#: pkg/kubectl/cmd/apiversions.go:34
msgid ""
"\n"
"\t\t# Print the supported API versions\n"
"\t\tkubectl api-versions"
msgstr ""
"\n"
"\t\t# Mostra as versões de API suportadas\n"
"\t\tkubectl api-versions"

#: pkg/kubectl/cmd/replace.go:50
msgid ""
"\n"
"\t\t# Replace a pod using the data in pod.json.\n"
"\t\tkubectl replace -f ./pod.json\n"
"\n"
"\t\t# Replace a pod based on the JSON passed into stdin.\n"
"\t\tcat pod.json | kubectl replace -f -\n"
"\n"
"\t\t# Update a single-container pod's image version (tag) to v4\n"
"\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' | kubectl replace -f "
"-\n"
"\n"
"\t\t# Force replace, delete and then re-create the resource\n"
"\t\tkubectl replace --force -f ./pod.json"
msgstr ""
"\n"
"\t\t# Substitui um pod utlizando os dados contidos em pod.json.\n"
"\t\tkubectl replace -f ./pod.json\n"
"\n"
"\t\t# Troca um pod com base no JSON fornecido no stdin.\n"
"\t\tcat pod.json | kubectl replace -f -\n"
"\n"
"\t\t# Atualiza uma versão de imagem (tag) de um pod com um único container para v4\n"
"\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' | kubectl replace -f "
"-\n"
"\n"
"\t\t# Força a troca, removendo e recriando o recurso\n"
"\t\tkubectl replace —force -f ./pod.json"

#: pkg/kubectl/cmd/logs.go:40
msgid ""
"\n"
"\t\t# Return snapshot logs from pod nginx with only one container\n"
"\t\tkubectl logs nginx\n"
"\n"
"\t\t# Return snapshot logs for the pods defined by label app=nginx\n"
"\t\tkubectl logs -lapp=nginx\n"
"\n"
"\t\t# Return snapshot of previous terminated ruby container logs from pod web-1\n"
"\t\tkubectl logs -p -c ruby web-1\n"
"\n"
"\t\t# Begin streaming the logs of the ruby container in pod web-1\n"
"\t\tkubectl logs -f -c ruby web-1\n"
"\n"
"\t\t# Display only the most recent 20 lines of output in pod nginx\n"
"\t\tkubectl logs --tail=20 nginx\n"
"\n"
"\t\t# Show all logs from pod nginx written in the last hour\n"
"\t\tkubectl logs --since=1h nginx\n"
"\n"
"\t\t# Return snapshot logs from first container of a job named hello\n"
"\t\tkubectl logs job/hello\n"
"\n"
"\t\t# Return snapshot logs from container nginx-1 of a deployment named nginx\n"
"\t\tkubectl logs deployment/nginx -c nginx-1"
msgstr ""
"\n"
"\t\t# Retorna os logs do pod nginx com um único container\n"
"\t\tkubectl logs nginx\n"
"\n"
"\t\t# Retorna os logs dos pods definidos pelo label app=nginx\n"
"\t\tkubectl logs -lapp=nginx\n"
"\n"
"\t\t# Retorna os logs do container ruby finalizado do pod web-1\n"
"\t\tkubectl logs -p -c ruby web-1\n"
"\n"
"\t\t# Começa o streaming de logs de um ruby container no pod web-1\n"
"\t\tkubectl logs -f -c ruby web-1\n"
"\n"
"\t\t# Mostra apenas as 20 linhas mais recentes de saída do pod nginx\n"
"\t\tkubectl logs —tail=20 nginx\n"
"\n"
"\t\t# Mostra todos os logs do pod nginx escrito na última hora\n"
"\t\tkubectl logs —since=1h nginx\n"
"\n"
"\t\t# Retorna os logs do primeiro container com o Job chamado hello\n"
"\t\tkubectl logs job/hello\n"
"\n"
"\t\t# Retorna os logs do container nginx-1 de um deployment chamado nginx\n"
"\t\tkubectl logs deployment/nginx -c nginx-1"

#: pkg/kubectl/cmd/proxy.go:53
msgid ""
"\n"
"\t\t# Run a proxy to kubernetes apiserver on port 8011, serving static content from ./local/"
"www/\n"
"\t\tkubectl proxy --port=8011 --www=./local/www/\n"
"\n"
"\t\t# Run a proxy to kubernetes apiserver on an arbitrary local port.\n"
"\t\t# The chosen port for the server will be output to stdout.\n"
"\t\tkubectl proxy --port=0\n"
"\n"
"\t\t# Run a proxy to kubernetes apiserver, changing the api prefix to k8s-api\n"
"\t\t# This makes e.g. the pods api available at localhost:8001/k8s-api/v1/pods/\n"
"\t\tkubectl proxy --api-prefix=/k8s-api"
msgstr ""
"\n"
"\t\t# Executa um proxy para o apiserver do kubernetes na porta 8011, servindo um conteúdo "
"estático do caminho ./local/www/\n"
"\t\tkubectl proxy —port=8011 —www=./local/www/\n"
"\n"
"\t\t# Executa um proxy para o apiserver do kubernetes em uma porta local arbitrária.\n"
"\t\t# A porta escolhida para o servidor será utilizada para o saída de stdout.\n"
"\t\tkubectl proxy —port=0\n"
"\n"
"\t\t# Executa um proxy para o apiserver do kubernetes, mudando o prefixo do api para k8s-api\n"
"\t\t# Com isso a api dos pods estarão disponível em localhost:8001/k8s-api/v1/pods/\n"
"\t\tkubectl proxy —api-prefix=/k8s-api"

#: pkg/kubectl/cmd/scale.go:43
msgid ""
"\n"
"\t\t# Scale a replicaset named 'foo' to 3.\n"
"\t\tkubectl scale --replicas=3 rs/foo\n"
"\n"
"\t\t# Scale a resource identified by type and name specified in \"foo.yaml\" to 3.\n"
"\t\tkubectl scale --replicas=3 -f foo.yaml\n"
"\n"
"\t\t# If the deployment named mysql's current size is 2, scale mysql to 3.\n"
"\t\tkubectl scale --current-replicas=2 --replicas=3 deployment/mysql\n"
"\n"
"\t\t# Scale multiple replication controllers.\n"
"\t\tkubectl scale --replicas=5 rc/foo rc/bar rc/baz\n"
"\n"
"\t\t# Scale job named 'cron' to 3.\n"
"\t\tkubectl scale --replicas=3 job/cron"
msgstr ""
"\n"
"\t\t# Escala um replicaset chamado 'foo' para 3.\n"
"\t\tkubectl scale —replicas=3 rs/foo\n"
"\n"
"\t\t# Escala um recurso identificado pelo tipo e nome especificado no arquivo \"foo.yaml\" para "
"3.\n"
"\t\tkubectl scale —replicas=3 -f foo.yaml\n"
"\n"
"\t\t# Se um deployment chamado mysql tem tamanho 2, escala o mysql para 3.\n"
"\t\tkubectl scale —current-replicas=2 —replicas=3 deployment/mysql\n"
"\n"
"\t\t# Escala múltiplos replication controllers.\n"
"\t\tkubectl scale —replicas=5 rc/foo rc/bar rc/baz\n"
"\n"
"\t\t# Escala um Job chamado 'cron' para 3.\n"
"\t\tkubectl scale —replicas=3 job/cron"

#: pkg/kubectl/cmd/apply_set_last_applied.go:67
msgid ""
"\n"
"\t\t# Set the last-applied-configuration of a resource to match the contents of a file.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml\n"
"\n"
"\t\t# Execute set-last-applied against each configuration file in a directory.\n"
"\t\tkubectl apply set-last-applied -f path/\n"
"\n"
"\t\t# Set the last-applied-configuration of a resource to match the contents of a file, will "
"create the annotation if it does not already exist.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml --create-annotation=true\n"
"\t\t"
msgstr ""
"\n"
"\t\t# Ajusta o last-applied-configuration de um recurso para corresponder ao conteúdo de um "
"arquivo.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml\n"
"\n"
"\t\t# Executa o set-last-applied em todos os arquivos de configuração no diretório.\n"
"\t\tkubectl apply set-last-applied -f path/\n"
"\n"
"\t\t# Ajusta o last-applied-configuration de um recurso para corresponder ao conteúdo de um "
"arquivo, será criada uma annotation se esta ainda não existe.\n"
"\t\tkubectl apply set-last-applied -f deploy.yaml —create-annotation=true\n"
"\t\t"

#: pkg/kubectl/cmd/top_pod.go:61
msgid ""
"\n"
"\t\t# Show metrics for all pods in the default namespace\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# Show metrics for all pods in the given namespace\n"
"\t\tkubectl top pod --namespace=NAMESPACE\n"
"\n"
"\t\t# Show metrics for a given pod and its containers\n"
"\t\tkubectl top pod POD_NAME --containers\n"
"\n"
"\t\t# Show metrics for the pods defined by label name=myLabel\n"
"\t\tkubectl top pod -l name=myLabel"
msgstr ""
"\n"
"\t\t# Mostra as métricas para todos os pods no namespace default\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# Mostra as métricas para todos os pods em um dado namespace\n"
"\t\tkubectl top pod —namespace=NAMESPACE\n"
"\n"
"\t\t# Mostra as métricas para um dado pod e seus containers\n"
"\t\tkubectl top pod POD_NAME —containers\n"
"\n"
"\t\t# Mostra as métricas para os pods definidos pelo label name=myLabel\n"
"\t\tkubectl top pod -l name=myLabel"

#: pkg/kubectl/cmd/stop.go:40
msgid ""
"\n"
"\t\t# Shut down foo.\n"
"\t\tkubectl stop replicationcontroller foo\n"
"\n"
"\t\t# Stop pods and services with label name=myLabel.\n"
"\t\tkubectl stop pods,services -l name=myLabel\n"
"\n"
"\t\t# Shut down the service defined in service.json\n"
"\t\tkubectl stop -f service.json\n"
"\n"
"\t\t# Shut down all resources in the path/to/resources directory\n"
"\t\tkubectl stop -f path/to/resources"
msgstr ""
"\n"
"\t\t# Termina o replicationcontroller foo.\n"
"\t\tkubectl stop replicationcontroller foo\n"
"\n"
"\t\t# Para os pods e serviços com o label name=myLabel.\n"
"\t\tkubectl stop pods,services -l name=myLabel\n"
"\n"
"\t\t# Termina o serviço definido no arquivo service.json\n"
"\t\tkubectl stop -f service.json\n"
"\n"
"\t\t# Termina todos os recursos no caminho do diretório path/to/resources\n"
"\t\tkubectl stop -f path/to/resources"

#: pkg/kubectl/cmd/run.go:57
msgid ""
"\n"
"\t\t# Start a single instance of nginx.\n"
"\t\tkubectl run nginx --image=nginx\n"
"\n"
"\t\t# Start a single instance of hazelcast and let the container expose port 5701 .\n"
"\t\tkubectl run hazelcast --image=hazelcast --port=5701\n"
"\n"
"\t\t# Start a single instance of hazelcast and set environment variables \"DNS_DOMAIN=cluster\" "
"and \"POD_NAMESPACE=default\" in the container.\n"
"\t\tkubectl run hazelcast --image=hazelcast --env=\"DNS_DOMAIN=cluster\" --env="
"\"POD_NAMESPACE=default\"\n"
"\n"
"\t\t# Start a replicated instance of nginx.\n"
"\t\tkubectl run nginx --image=nginx --replicas=5\n"
"\n"
"\t\t# Dry run. Print the corresponding API objects without creating them.\n"
"\t\tkubectl run nginx --image=nginx --dry-run\n"
"\n"
"\t\t# Start a single instance of nginx, but overload the spec of the deployment with a partial "
"set of values parsed from JSON.\n"
"\t\tkubectl run nginx --image=nginx --overrides='{ \"apiVersion\": \"v1\", \"spec\": { ... } }'\n"
"\n"
"\t\t# Start a pod of busybox and keep it in the foreground, don't restart it if it exits.\n"
"\t\tkubectl run -i -t busybox --image=busybox --restart=Never\n"
"\n"
"\t\t# Start the nginx container using the default command, but use custom arguments (arg1 .. "
"argN) for that command.\n"
"\t\tkubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\n"
"\n"
"\t\t# Start the nginx container using a different command and custom arguments.\n"
"\t\tkubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\n"
"\n"
"\t\t# Start the perl container to compute π to 2000 places and print it out.\n"
"\t\tkubectl run pi --image=perl --restart=OnFailure -- perl -Mbignum=bpi -wle 'print bpi(2000)'\n"
"\n"
"\t\t# Start the cron job to compute π to 2000 places and print it out every 5 minutes.\n"
"\t\tkubectl run pi --schedule=\"0/5 * * * ?\" --image=perl --restart=OnFailure -- perl -"
"Mbignum=bpi -wle 'print bpi(2000)'"
msgstr ""
"\n"
"\t\t# Inicia uma única instância de nginx.\n"
"\t\tkubectl run nginx —image=nginx\n"
"\n"
"\t\t# Inicia uma única instância do hazelcast e expõe a porta 5701 do container.\n"
"\t\tkubectl run hazelcast —image=hazelcast —port=5701\n"
"\n"
"\t\t# Inicia uma única instância do hazelcast e seta as variáveis de ambiente "
"\"DNS_DOMAIN=cluster\" e \"POD_NAMESPACE=default\" no container.\n"
"\t\tkubectl run hazelcast —image=hazelcast —env=\"DNS_DOMAIN=cluster\" —env="
"\"POD_NAMESPACE=default\"\n"
"\n"
"\t\t# Inicia uma instância replicada de nginx.\n"
"\t\tkubectl run nginx —image=nginx —replicas=5\n"
"\n"
"\t\t# Dry run. Mostra os objetos da API correspondente sem criar elas.\n"
"\t\tkubectl run nginx —image=nginx —dry-run\n"
"\n"
"\t\t# Inicia uma única instância de nginx, mas sobrescreve a spec do deployment com um conjunto "
"parcial de valores passeados do JSON.\n"
"\t\tkubectl run nginx —image=nginx —overrides='{ \"apiVersion\": \"v1\", \"spec\": { … } }'\n"
"\n"
"\t\t# Inicia um pod de busybox e mantém ele em primeiro plano, não reinicia se ele já existe.\n"
"\t\tkubectl run -i -t busybox —image=busybox —restart=Never\n"
"\n"
"\t\t# Inicia um container nginx usando o comando padrão, mas utiliza argumentos customizados "
"(arg1 .. argN) para o comando.\n"
"\t\tkubectl run nginx —image=nginx — <arg1> <arg2> … <argN>\n"
"\n"
"\t\t# Inicia um container nginx usando um comando diferente e argumentos customizados.\n"
"\t\tkubectl run nginx —image=nginx —command — <cmd> <arg1> … <argN>\n"
"\n"
"\t\t# Inicia um container perl para processar π to 2000 posições e mostra a saída.\n"
"\t\tkubectl run pi —image=perl —restart=OnFailure — perl -Mbignum=bpi -wle 'print bpi(2000)'\n"
"\n"
"\t\t# Inicia um cron job para processar as 2000 posições de π e mostra a saída a cada 5 "
"minutos.\n"
"\t\tkubectl run pi —schedule=\"0/5 * * * ?\" —image=perl —restart=OnFailure — perl -Mbignum=bpi -"
"wle 'print bpi(2000)'"

#: pkg/kubectl/cmd/taint.go:67
msgid ""
"\n"
"\t\t# Update node 'foo' with a taint with key 'dedicated' and value 'special-user' and effect "
"'NoSchedule'.\n"
"\t\t# If a taint with that key and effect already exists, its value is replaced as specified.\n"
"\t\tkubectl taint nodes foo dedicated=special-user:NoSchedule\n"
"\n"
"\t\t# Remove from node 'foo' the taint with key 'dedicated' and effect 'NoSchedule' if one "
"exists.\n"
"\t\tkubectl taint nodes foo dedicated:NoSchedule-\n"
"\n"
"\t\t# Remove from node 'foo' all the taints with key 'dedicated'\n"
"\t\tkubectl taint nodes foo dedicated-"
msgstr ""
"\n"
"\t\t# Atualiza a restrição para a chave 'dedicated' e o valor 'special-user' e o efeito "
"'NoSchedule' para o node 'foo'.\n"
"\t\t# Se o taint com esta chave e efeito já existirem, o seu valor é substituído pelo "
"especificado.\n"
"\t\tkubectl taint nodes foo dedicated=special-user:NoSchedule\n"
"\n"
"\t\t# Remove a restrição com a chave 'dedicated' e efeito 'NoSchedule' do nodo 'foo' se "
"existir.\n"
"\t\tkubectl taint nodes foo dedicated:NoSchedule-\n"
"\n"
"\t\t# Remove o node 'foo' todos os taints com a chave 'dedicated'\n"
"\t\tkubectl taint nodes foo dedicated-"

#: pkg/kubectl/cmd/label.go:77
msgid ""
"\n"
"\t\t# Update pod 'foo' with the label 'unhealthy' and the value 'true'.\n"
"\t\tkubectl label pods foo unhealthy=true\n"
"\n"
"\t\t# Update pod 'foo' with the label 'status' and the value 'unhealthy', overwriting any "
"existing value.\n"
"\t\tkubectl label --overwrite pods foo status=unhealthy\n"
"\n"
"\t\t# Update all pods in the namespace\n"
"\t\tkubectl label pods --all status=unhealthy\n"
"\n"
"\t\t# Update a pod identified by the type and name in \"pod.json\"\n"
"\t\tkubectl label -f pod.json status=unhealthy\n"
"\n"
"\t\t# Update pod 'foo' only if the resource is unchanged from version 1.\n"
"\t\tkubectl label pods foo status=unhealthy --resource-version=1\n"
"\n"
"\t\t# Update pod 'foo' by removing a label named 'bar' if it exists.\n"
"\t\t# Does not require the --overwrite flag.\n"
"\t\tkubectl label pods foo bar-"
msgstr ""
"\n"
"\t\t# Atualiza o pod 'foo' com o label 'unhealthy' e valor 'true'.\n"
"\t\tkubectl label pods foo unhealthy=true\n"
"\n"
"\t\t# Atualiza o pod 'foo' com o label 'status' e valor 'unhealthy', sobrescrevendo qualquer "
"valor existente.\n"
"\t\tkubectl label —overwrite pods foo status=unhealthy\n"
"\n"
"\t\t# Atualiza todos os pods no namespace corrente\n"
"\t\tkubectl label pods —all status=unhealthy\n"
"\n"
"\t\t# Atualiza o pod identificado pelo tipo e nome em \"pod.json\"\n"
"\t\tkubectl label -f pod.json status=unhealthy\n"
"\n"
"\t\t# Atualiza o pod 'foo' apenas se o recurso não foi modificado na versão 1.\n"
"\t\tkubectl label pods foo status=unhealthy —resource-version=1\n"
"\n"
"\t\t# Atualiza o pod 'foo' removendo o label chamado 'bar', se ele existir.\n"
"\t\t# Não necessita a flag —overwrite.\n"
"\t\tkubectl label pods foo bar-"

#: pkg/kubectl/cmd/rollingupdate.go:54
msgid ""
"\n"
"\t\t# Update pods of frontend-v1 using new replication controller data in frontend-v2.json.\n"
"\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
"\n"
"\t\t# Update pods of frontend-v1 using JSON data passed into stdin.\n"
"\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
"\n"
"\t\t# Update the pods of frontend-v1 to frontend-v2 by just changing the image, and switching "
"the\n"
"\t\t# name of the replication controller.\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
"\n"
"\t\t# Update the pods of frontend by just changing the image, and keeping the old name.\n"
"\t\tkubectl rolling-update frontend --image=image:v2\n"
"\n"
"\t\t# Abort and reverse an existing rollout in progress (from frontend-v1 to frontend-v2).\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"
msgstr ""
"\n"
"\t\t# Atualiza os pods de frontend-v1 utilizando os dados do novo replication controller "
"definido em frontend-v2.json.\n"
"\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
"\n"
"\t\t# Atualiza os pods do frontend-v1 utilizando os dados em JSON passados pelo stdin.\n"
"\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
"\n"
"\t\t# Atualiza os pods do frontend-v1 para frontend-v2 trocando a imagem, e trocando o\n"
"\t\t# nome do replication controller.\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
"\n"
"\t\t# Atualiza os pods do frontend trocando a imagem, e mantendo o nome antigo.\n"
"\t\tkubectl rolling-update frontend --image=image:v2\n"
"\n"
"\t\t# Cancela e reverte um rollout existente em progresso (de frontend-v1 para frontend-v2).\n"
"\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"

#: pkg/kubectl/cmd/apply_view_last_applied.go:52
msgid ""
"\n"
"\t\t# View the last-applied-configuration annotations by type/name in YAML.\n"
"\t\tkubectl apply view-last-applied deployment/nginx\n"
"\n"
"\t\t# View the last-applied-configuration annotations by file in JSON\n"
"\t\tkubectl apply view-last-applied -f deploy.yaml -o json"
msgstr ""
"\n"
"\t\t# Visualiza a anotação last-applied-configuration pelo tipo/nome no YAML.\n"
"\t\tkubectl apply view-last-applied deployment/nginx\n"
"\n"
"\t\t# Visualiza a anotação last-applied-configuration no arquivo JSON\n"
"\t\tkubectl apply view-last-applied -f deploy.yaml -o json"

#: pkg/kubectl/cmd/apply.go:75
msgid ""
"\n"
"\t\tApply a configuration to a resource by filename or stdin.\n"
"\t\tThis resource will be created if it doesn't exist yet.\n"
"\t\tTo use 'apply', always create the resource initially with either 'apply' or 'create --save-"
"config'.\n"
"\n"
"\t\tJSON and YAML formats are accepted.\n"
"\n"
"\t\tAlpha Disclaimer: the --prune functionality is not yet complete. Do not use unless you are "
"aware of what the current state is. See https://issues.k8s.io/34274."
msgstr ""
"\n"
"\t\tAplica a configuração em um recurso usando um nome de arquivo ou stdin.\n"
"\t\tEste recurso será criado se ele não existir.\n"
"\t\tPara utilizar o 'apply', sempre crie o recurso inicialmente com 'apply' ou 'create --save-"
"config'.\n"
"\n"
"\t\tFormatos JSON e YAML são aceitos.\n"
"\n"
"\t\tNota Alpha: a funcionalidade --prune não está completa. Não utilize a não ser que você saibe "
"qual é o estado corrente. Veja https://issues.k8s.io/34274."

#: pkg/kubectl/cmd/convert.go:38
msgid ""
"\n"
"\t\tConvert config files between different API versions. Both YAML\n"
"\t\tand JSON formats are accepted.\n"
"\n"
"\t\tThe command takes filename, directory, or URL as input, and convert it into format\n"
"\t\tof version specified by --output-version flag. If target version is not specified or\n"
"\t\tnot supported, convert to latest version.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use -o option\n"
"\t\tto change to output destination."
msgstr ""
"\n"
"\t\tConvert os arquivos de configuração para diferentes versões de API. Ambos formatos YAML\n"
"\t\\e JSON são aceitos.\n"
"\n"
"\t\tO command recebe o nome do arquivo, diretório ou URL como entrada, e converteno formato\n"
"\t\tpara a versão especificada pelo parametro —output-version. Se a versão desejada não é "
"especificada ou \n"
"\t\tnão é suportada, converte para a última versã disponível.\n"
"\n"
"\t\tA saída padrão é no formato YAML. Pode ser utilizadoa opção -o\n"
"\t\tpara mudar o formato de saída."

#: pkg/kubectl/cmd/create_clusterrole.go:31
msgid ""
"\n"
"\t\tCreate a ClusterRole."
msgstr ""
"\n"
"\t\tCria um ClusterRole."

#: pkg/kubectl/cmd/create_clusterrolebinding.go:32
msgid ""
"\n"
"\t\tCreate a ClusterRoleBinding for a particular ClusterRole."
msgstr ""
"\n"
"\t\tCria um ClusterRoleBinding para um ClusterRole específico."

#: pkg/kubectl/cmd/create_rolebinding.go:32
msgid ""
"\n"
"\t\tCreate a RoleBinding for a particular Role or ClusterRole."
msgstr ""
"\n"
"\t\tCria uma RoleBinding para uma Role específica ou ClusterRole."

#: pkg/kubectl/cmd/create_secret.go:200
msgid ""
"\n"
"\t\tCreate a TLS secret from the given public/private key pair.\n"
"\n"
"\t\tThe public/private key pair must exist before hand. The public key certificate must be .PEM "
"encoded and match the given private key."
msgstr ""
"\n"
"\t\tCria um TLS secret de uma chave pública/privada fornecida.\n"
"\n"
"\t\tA chave pública/privada deve existir antes. O certificado da chave deve ser codificada como "
"PEM, e ter sido gerada pela chave privada."

#: pkg/kubectl/cmd/create_configmap.go:32
msgid ""
"\n"
"\t\tCreate a configmap based on a file, directory, or specified literal value.\n"
"\n"
"\t\tA single configmap may package one or more key/value pairs.\n"
"\n"
"\t\tWhen creating a configmap based on a file, the key will default to the basename of the file, "
"and the value will\n"
"\t\tdefault to the file content.  If the basename is an invalid key, you may specify an "
"alternate key.\n"
"\n"
"\t\tWhen creating a configmap based on a directory, each file whose basename is a valid key in "
"the directory will be\n"
"\t\tpackaged into the configmap.  Any directory entries except regular files are ignored (e.g. "
"subdirectories,\n"
"\t\tsymlinks, devices, pipes, etc)."
msgstr ""
"\n"
"\t\tCria um configmap com base em um arquivo, diretório, ou um valor literal especificado.\n"
"\n"
"\t\tUm configmap único pode conter um ou mais pares de chave/valor.\n"
"\n"
"\t\tQuando criar um configmap com base em um arquivo, a chave será por padrão o nome do arquivo, "
"e o valor será\n"
"\t\tpor padrão o conteúdo do arquivo.  Se o nome do arquivo for uma chave inválida, você deve "
"especificar uma chave alternativa.\n"
"\n"
"\t\tQuando criar um configmap com base em um diretório, cada arquivo cujo o nome é uma chave "
"válida no diretório será\n"
"\t\tcolocada no configmap.  Qualquer entrada de diretório, exceto as com arquivos válidos serão "
"ignorados (por exemplo: sub-diretórios,\n"
"\t\tsymlinks, devices, pipes, etc)."

#: pkg/kubectl/cmd/create_namespace.go:32
msgid ""
"\n"
"\t\tCreate a namespace with the specified name."
msgstr ""
"\n"
"\t\tCria um namespace com um nome especificado."

#: pkg/kubectl/cmd/create_secret.go:119
msgid ""
"\n"
"\t\tCreate a new secret for use with Docker registries.\n"
"\n"
"\t\tDockercfg secrets are used to authenticate against Docker registries.\n"
"\n"
"\t\tWhen using the Docker command line to push images, you can authenticate to a given registry "
"by running\n"
"\n"
"\t\t    $ docker login DOCKER_REGISTRY_SERVER --username=DOCKER_USER --password=DOCKER_PASSWORD "
"--email=DOCKER_EMAIL'.\n"
"\n"
"    That produces a ~/.dockercfg file that is used by subsequent 'docker push' and 'docker pull' "
"commands to\n"
"\t\tauthenticate to the registry. The email address is optional.\n"
"\n"
"\t\tWhen creating applications, you may have a Docker registry that requires authentication.  In "
"order for the\n"
"\t\tnodes to pull images on your behalf, they have to have the credentials.  You can provide "
"this information\n"
"\t\tby creating a dockercfg secret and attaching it to your service account."
msgstr ""
"\n"
"\t\tCria um novo secret para utilizar com Docker registries.\n"
"\n"
"\t\tDockercfg secrets são utilizados para autenticar Docker registries.\n"
"\n"
"\t\tQuando utilizando a linha de comando do Docker para realizar envio das images, você pode se "
"autenticar para um registro fornecido executando\n"
"\n"
"\t\t    $ docker login DOCKER_REGISTRY_SERVER —username=DOCKER_USER —password=DOCKER_PASSWORD —"
"email=DOCKER_EMAIL'.\n"
"\n"
"    Isso irá gerar um arquivo ~/.dockercfg que será utilizado para os comandos 'docker push' e "
"'docker pull' \n"
"\t\tse autenticarem no registro. O endereço de email é opcional.\n"
"\n"
"\t\tQuando criar aplicações, você pode ter um Docker registry que requer autenticação.  Para "
"que \n"
"\t\tos nodes possam baixar as imagens em seu nome, eles devem ter as credenciais.  Você pode "
"prover esta informação\n"
"\t\tcriando um dockercfg secret e anexando-o à sua conta de serviço."

#: pkg/kubectl/cmd/create_pdb.go:32
msgid ""
"\n"
"\t\tCreate a pod disruption budget with the specified name, selector, and desired minimum "
"available pods"
msgstr ""
"\n"
"\t\tCria um pod disruption budget com o nome especificado, seletor, e o número mínimo de pode "
"disponíveis"

#: pkg/kubectl/cmd/create.go:42
msgid ""
"\n"
"\t\tCreate a resource by filename or stdin.\n"
"\n"
"\t\tJSON and YAML formats are accepted."
msgstr ""
"\n"
"\t\tCria um recurso por nome de arquivo ou stdin.\n"
"\n"
"\t\tOs formatos JSON e YAML são aceitos."

#: pkg/kubectl/cmd/create_quota.go:32
msgid ""
"\n"
"\t\tCreate a resourcequota with the specified name, hard limits and optional scopes"
msgstr ""
"\n"
"\t\tCria um resourcequota com o nome especificado, limits rigídos e escopo opcional"

#: pkg/kubectl/cmd/create_role.go:38
msgid ""
"\n"
"\t\tCreate a role with single rule."
msgstr ""
"\n"
"\t\tCria uma role com uma única regra."

#: pkg/kubectl/cmd/create_secret.go:47
msgid ""
"\n"
"\t\tCreate a secret based on a file, directory, or specified literal value.\n"
"\n"
"\t\tA single secret may package one or more key/value pairs.\n"
"\n"
"\t\tWhen creating a secret based on a file, the key will default to the basename of the file, "
"and the value will\n"
"\t\tdefault to the file content.  If the basename is an invalid key, you may specify an "
"alternate key.\n"
"\n"
"\t\tWhen creating a secret based on a directory, each file whose basename is a valid key in the "
"directory will be\n"
"\t\tpackaged into the secret.  Any directory entries except regular files are ignored (e.g. "
"subdirectories,\n"
"\t\tsymlinks, devices, pipes, etc)."
msgstr ""
"\n"
"\t\tCria um secret com base em um arquivo, diretório, ou um valor literal especificado.\n"
"\n"
"\t\tUm secret único pode conter um ou mais pares de chave/valor.\n"
"\n"
"\t\tQuando criar um secret com base em um arquivo, a chave será por padrão o nome do arquivo, e "
"o valor será\n"
"\t\tpor padrão o conteúdo do arquivo.  Se o nome do arquivo for uma chave inválida, você deve "
"especificar uma chave alternativa.\n"
"\n"
"\t\tQuando criar um secret com base em um diretório, cada arquivo cujo o nome é uma chave válida "
"no diretório será\n"
"\t\tcolocada no configmap.  Qualquer entrada de diretório, exceto as com arquivos válidos serão "
"ignorados (por exemplo: sub-diretórios,\n"
"\t\tsymlinks, devices, pipes, etc)."

#: pkg/kubectl/cmd/create_serviceaccount.go:32
msgid ""
"\n"
"\t\tCreate a service account with the specified name."
msgstr ""
"\n"
"\t\tCria uma conta de serviço com um nome especificado."

#: pkg/kubectl/cmd/run.go:52
msgid ""
"\n"
"\t\tCreate and run a particular image, possibly replicated.\n"
"\n"
"\t\tCreates a deployment or job to manage the created container(s)."
msgstr ""
"\n"
"\t\tCria e executa uma imagem específica, possivelmente replicada.\n"
"\n"
"\t\tCria um deployment ou job para gerenciar o(s) container(s) criado(s)."

#: pkg/kubectl/cmd/autoscale.go:34
msgid ""
"\n"
"\t\tCreates an autoscaler that automatically chooses and sets the number of pods that run in a "
"kubernetes cluster.\n"
"\n"
"\t\tLooks up a Deployment, ReplicaSet, or ReplicationController by name and creates an "
"autoscaler that uses the given resource as a reference.\n"
"\t\tAn autoscaler can automatically increase or decrease number of pods deployed within the "
"system as needed."
msgstr ""
"\n"
"\t\tCria um autoscaler que automaticamente escolhe e configura quantos pods irão executar em um "
"cluster kubernetes.\n"
"\n"
"\t\tProcura por um Deployment, ReplicaSet, ou ReplicationController por nome e cria um "
"autoscaler que utiliza o recurso fornecido como referência.\n"
"\t\tUm autoscaler pode automaticamente aumentar ou reduzir o número de pods quando necessário."

#: pkg/kubectl/cmd/delete.go:40
msgid ""
"\n"
"\t\tDelete resources by filenames, stdin, resources and names, or by resources and label "
"selector.\n"
"\n"
"\t\tJSON and YAML formats are accepted. Only one type of the arguments may be specified: "
"filenames,\n"
"\t\tresources and names, or resources and label selector.\n"
"\n"
"\t\tSome resources, such as pods, support graceful deletion. These resources define a default "
"period\n"
"\t\tbefore they are forcibly terminated (the grace period) but you may override that value with\n"
"\t\tthe --grace-period flag, or pass --now to set a grace-period of 1. Because these resources "
"often\n"
"\t\trepresent entities in the cluster, deletion may not be acknowledged immediately. If the "
"node\n"
"\t\thosting a pod is down or cannot reach the API server, termination may take significantly "
"longer\n"
"\t\tthan the grace period. To force delete a resource,\tyou must pass a grace\tperiod of 0 and "
"specify\n"
"\t\tthe --force flag.\n"
"\n"
"\t\tIMPORTANT: Force deleting pods does not wait for confirmation that the pod's processes have "
"been\n"
"\t\tterminated, which can leave those processes running until the node detects the deletion and\n"
"\t\tcompletes graceful deletion. If your processes use shared storage or talk to a remote API "
"and\n"
"\t\tdepend on the name of the pod to identify themselves, force deleting those pods may result "
"in\n"
"\t\tmultiple processes running on different machines using the same identification which may "
"lead\n"
"\t\tto data corruption or inconsistency. Only force delete pods when you are sure the pod is\n"
"\t\tterminated, or if your application can tolerate multiple copies of the same pod running at "
"once.\n"
"\t\tAlso, if you force delete pods the scheduler may place new pods on those nodes before the "
"node\n"
"\t\thas released those resources and causing those pods to be evicted immediately.\n"
"\n"
"\t\tNote that the delete command does NOT do resource version checks, so if someone\n"
"\t\tsubmits an update to a resource right when you submit a delete, their update\n"
"\t\twill be lost along with the rest of the resource."
msgstr ""
"\n"
"\t\tDelete resources by filenames, stdin, resources and names, or by resources and label "
"selector.\n"
"\n"
"\t\tJSON and YAML formats are accepted. Only one type of the arguments may be specified: "
"filenames,\n"
"\t\tresources and names, or resources and label selector.\n"
"\n"
"\t\tSome resources, such as pods, support graceful deletion. These resources define a default "
"period\n"
"\t\tbefore they are forcibly terminated (the grace period) but you may override that value with\n"
"\t\tthe —grace-period flag, or pass —now to set a grace-period of 1. Because these resources "
"often\n"
"\t\trepresent entities in the cluster, deletion may not be acknowledged immediately. If the "
"node\n"
"\t\thosting a pod is down or cannot reach the API server, termination may take significantly "
"longer\n"
"\t\tthan the grace period. To force delete a resource,\tyou must pass a grace\tperiod of 0 and "
"specify\n"
"\t\tthe —force flag.\n"
"\n"
"\t\tIMPORTANT: Force deleting pods does not wait for confirmation that the pod's processes have "
"been\n"
"\t\tterminated, which can leave those processes running until the node detects the deletion and\n"
"\t\tcompletes graceful deletion. If your processes use shared storage or talk to a remote API "
"and\n"
"\t\tdepend on the name of the pod to identify themselves, force deleting those pods may result "
"in\n"
"\t\tmultiple processes running on different machines using the same identification which may "
"lead\n"
"\t\tto data corruption or inconsistency. Only force delete pods when you are sure the pod is\n"
"\t\tterminated, or if your application can tolerate multiple copies of the same pod running at "
"once.\n"
"\t\tAlso, if you force delete pods the scheduler may place new pods on those nodes before the "
"node\n"
"\t\thas released those resources and causing those pods to be evicted immediately.\n"
"\n"
"\t\tNote that the delete command does NOT do resource version checks, so if someone\n"
"\t\tsubmits an update to a resource right when you submit a delete, their update\n"
"\t\twill be lost along with the rest of the resource."

#: pkg/kubectl/cmd/stop.go:31
msgid ""
"\n"
"\t\tDeprecated: Gracefully shut down a resource by name or filename.\n"
"\n"
"\t\tThe stop command is deprecated, all its functionalities are covered by delete command.\n"
"\t\tSee 'kubectl delete --help' for more details.\n"
"\n"
"\t\tAttempts to shut down and delete a resource that supports graceful termination.\n"
"\t\tIf the resource is scalable it will be scaled to 0 before deletion."
msgstr ""
"\n"
"\t\tDeprecated: Gracefully shut down a resource by name or filename.\n"
"\n"
"\t\tThe stop command is deprecated, all its functionalities are covered by delete command.\n"
"\t\tSee 'kubectl delete —help' for more details.\n"
"\n"
"\t\tAttempts to shut down and delete a resource that supports graceful termination.\n"
"\t\tIf the resource is scalable it will be scaled to 0 before deletion."

#: pkg/kubectl/cmd/top_node.go:60
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage of nodes.\n"
"\n"
"\t\tThe top-node command allows you to see the resource consumption of nodes."
msgstr ""
"\n"
"\t\tMostra os Recursos (CPU/Memória/Armazenamento) utilizados nos nodes.\n"
"\n"
"\t\tO comando top-node permite que você veja o consumo de recursos dos nodes."

#: pkg/kubectl/cmd/top_pod.go:53
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage of pods.\n"
"\n"
"\t\tThe 'top pod' command allows you to see the resource consumption of pods.\n"
"\n"
"\t\tDue to the metrics pipeline delay, they may be unavailable for a few minutes\n"
"\t\tsince pod creation."
msgstr ""
"\n"
"\t\tMostra a utilização de recursos dos pods (CPU/Memória/Armazenamento).\n"
"\n"
"\t\tO comando 'top pod' deixa você ver a utilização dos recusrsos dos pods.\n"
"\n"
"\t\tDevido ao atraso da pipeline de métricas, o resultado pode estar indisponível por alguns "
"minutos\n"
"\t\tdesde a criação do pod."

#: pkg/kubectl/cmd/top.go:33
msgid ""
"\n"
"\t\tDisplay Resource (CPU/Memory/Storage) usage.\n"
"\n"
"\t\tThe top command allows you to see the resource consumption for nodes or pods.\n"
"\n"
"\t\tThis command requires Heapster to be correctly configured and working on the server. "
msgstr ""
"\n"
"\t\tMostra a utilização de recursos (CPU/Memória/Armazenamento).\n"
"\n"
"\t\tO comando top deixa você ver a utilização de recursos de nodes e pods.\n"
"\n"
"\t\tEste comando necessita que o Heapster esteja corretamente configurado e rodando no servidor. "

#: pkg/kubectl/cmd/drain.go:140
msgid ""
"\n"
"\t\tDrain node in preparation for maintenance.\n"
"\n"
"\t\tThe given node will be marked unschedulable to prevent new pods from arriving.\n"
"\t\t'drain' evicts the pods if the APIServer supports eviction\n"
"\t\t(http://kubernetes.io/docs/admin/disruptions/). Otherwise, it will use normal DELETE\n"
"\t\tto delete the pods.\n"
"\t\tThe 'drain' evicts or deletes all pods except mirror pods (which cannot be deleted through\n"
"\t\tthe API server).  If there are DaemonSet-managed pods, drain will not proceed\n"
"\t\twithout --ignore-daemonsets, and regardless it will not delete any\n"
"\t\tDaemonSet-managed pods, because those pods would be immediately replaced by the\n"
"\t\tDaemonSet controller, which ignores unschedulable markings.  If there are any\n"
"\t\tpods that are neither mirror pods nor managed by ReplicationController,\n"
"\t\tReplicaSet, DaemonSet, StatefulSet or Job, then drain will not delete any pods unless you\n"
"\t\tuse --force.  --force will also allow deletion to proceed if the managing resource of one\n"
"\t\tor more pods is missing.\n"
"\n"
"\t\t'drain' waits for graceful termination. You should not operate on the machine until\n"
"\t\tthe command completes.\n"
"\n"
"\t\tWhen you are ready to put the node back into service, use kubectl uncordon, which\n"
"\t\twill make the node schedulable again.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"
msgstr ""
"\n"
"\t\tDrain node in preparation for maintenance.\n"
"\n"
"\t\tThe given node will be marked unschedulable to prevent new pods from arriving.\n"
"\t\t'drain' evicts the pods if the APIServer supports eviction\n"
"\t\t(http://kubernetes.io/docs/admin/disruptions/). Otherwise, it will use normal DELETE\n"
"\t\tto delete the pods.\n"
"\t\tThe 'drain' evicts or deletes all pods except mirror pods (which cannot be deleted through\n"
"\t\tthe API server).  If there are DaemonSet-managed pods, drain will not proceed\n"
"\t\twithout —ignore-daemonsets, and regardless it will not delete any\n"
"\t\tDaemonSet-managed pods, because those pods would be immediately replaced by the\n"
"\t\tDaemonSet controller, which ignores unschedulable markings.  If there are any\n"
"\t\tpods that are neither mirror pods nor managed by ReplicationController,\n"
"\t\tReplicaSet, DaemonSet, StatefulSet or Job, then drain will not delete any pods unless you\n"
"\t\tuse —force.  —force will also allow deletion to proceed if the managing resource of one\n"
"\t\tor more pods is missing.\n"
"\n"
"\t\t'drain' waits for graceful termination. You should not operate on the machine until\n"
"\t\tthe command completes.\n"
"\n"
"\t\tWhen you are ready to put the node back into service, use kubectl uncordon, which\n"
"\t\twill make the node schedulable again.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"

#: pkg/kubectl/cmd/edit.go:56
msgid ""
"\n"
"\t\tEdit a resource from the default editor.\n"
"\n"
"\t\tThe edit command allows you to directly edit any API resource you can retrieve via the\n"
"\t\tcommand line tools. It will open the editor defined by your KUBE_EDITOR, or EDITOR\n"
"\t\tenvironment variables, or fall back to 'vi' for Linux or 'notepad' for Windows.\n"
"\t\tYou can edit multiple objects, although changes are applied one at a time. The command\n"
"\t\taccepts filenames as well as command line arguments, although the files you point to must\n"
"\t\tbe previously saved versions of resources.\n"
"\n"
"\t\tEditing is done with the API version used to fetch the resource.\n"
"\t\tTo edit using a specific API version, fully-qualify the resource, version, and group.\n"
"\n"
"\t\tThe default format is YAML. To edit in JSON, specify \"-o json\".\n"
"\n"
"\t\tThe flag --windows-line-endings can be used to force Windows line endings,\n"
"\t\totherwise the default for your operating system will be used.\n"
"\n"
"\t\tIn the event an error occurs while updating, a temporary file will be created on disk\n"
"\t\tthat contains your unapplied changes. The most common error when updating a resource\n"
"\t\tis another editor changing the resource on the server. When this occurs, you will have\n"
"\t\tto apply your changes to the newer version of the resource, or update your temporary\n"
"\t\tsaved copy to include the latest resource version."
msgstr ""
"\n"
"\t\tEdit a resource from the default editor.\n"
"\n"
"\t\tThe edit command allows you to directly edit any API resource you can retrieve via the\n"
"\t\tcommand line tools. It will open the editor defined by your KUBE_EDITOR, or EDITOR\n"
"\t\tenvironment variables, or fall back to 'vi' for Linux or 'notepad' for Windows.\n"
"\t\tYou can edit multiple objects, although changes are applied one at a time. The command\n"
"\t\taccepts filenames as well as command line arguments, although the files you point to must\n"
"\t\tbe previously saved versions of resources.\n"
"\n"
"\t\tEditing is done with the API version used to fetch the resource.\n"
"\t\tTo edit using a specific API version, fully-qualify the resource, version, and group.\n"
"\n"
"\t\tThe default format is YAML. To edit in JSON, specify \"-o json\".\n"
"\n"
"\t\tThe flag —windows-line-endings can be used to force Windows line endings,\n"
"\t\totherwise the default for your operating system will be used.\n"
"\n"
"\t\tIn the event an error occurs while updating, a temporary file will be created on disk\n"
"\t\tthat contains your unapplied changes. The most common error when updating a resource\n"
"\t\tis another editor changing the resource on the server. When this occurs, you will have\n"
"\t\tto apply your changes to the newer version of the resource, or update your temporary\n"
"\t\tsaved copy to include the latest resource version."

#: pkg/kubectl/cmd/drain.go:115
msgid ""
"\n"
"\t\tMark node as schedulable."
msgstr ""
"\n"
"\t\tRemove a restrição de execução de workloads no node."

#: pkg/kubectl/cmd/drain.go:90
msgid ""
"\n"
"\t\tMark node as unschedulable."
msgstr ""
"\n"
"\t\tAplica a restrição de execução de workloads no node."

#: pkg/kubectl/cmd/completion.go:47
msgid ""
"\n"
"\t\tOutput shell completion code for the specified shell (bash or zsh).\n"
"\t\tThe shell code must be evaluated to provide interactive\n"
"\t\tcompletion of kubectl commands.  This can be done by sourcing it from\n"
"\t\tthe .bash_profile.\n"
"\n"
"\t\tNote: this requires the bash-completion framework, which is not installed\n"
"\t\tby default on Mac.  This can be installed by using homebrew:\n"
"\n"
"\t\t    $ brew install bash-completion\n"
"\n"
"\t\tOnce installed, bash_completion must be evaluated.  This can be done by adding the\n"
"\t\tfollowing line to the .bash_profile\n"
"\n"
"\t\t    $ source $(brew --prefix)/etc/bash_completion\n"
"\n"
"\t\tNote for zsh users: [1] zsh completions are only supported in versions of zsh >= 5.2"
msgstr ""
"\n"
"\t\tOutput shell completion code for the specified shell (bash or zsh).\n"
"\t\tThe shell code must be evaluated to provide interactive\n"
"\t\tcompletion of kubectl commands.  This can be done by sourcing it from\n"
"\t\tthe .bash_profile.\n"
"\n"
"\t\tNote: this requires the bash-completion framework, which is not installed\n"
"\t\tby default on Mac.  This can be installed by using homebrew:\n"
"\n"
"\t\t    $ brew install bash-completion\n"
"\n"
"\t\tOnce installed, bash_completion must be evaluated.  This can be done by adding the\n"
"\t\tfollowing line to the .bash_profile\n"
"\n"
"\t\t    $ source $(brew —prefix)/etc/bash_completion\n"
"\n"
"\t\tNote for zsh users: [1] zsh completions are only supported in versions of zsh >= 5.2"

#: pkg/kubectl/cmd/rollingupdate.go:45
msgid ""
"\n"
"\t\tPerform a rolling update of the given ReplicationController.\n"
"\n"
"\t\tReplaces the specified replication controller with a new replication controller by updating "
"one pod at a time to use the\n"
"\t\tnew PodTemplate. The new-controller.json must specify the same namespace as the\n"
"\t\texisting replication controller and overwrite at least one (common) label in its "
"replicaSelector.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate.svg)"
msgstr ""
"\n"
"\t\tAplica uma atualização contínua em um ReplicationController.\n"
"\n"
"\t\tTroca o replication controller especificado por um novo replication controller atualizando "
"um pod por vez para utilizar o\n"
"\t\tnovo PodTemplate. O new-controller.json deve ser especificado no mesmo namespace que o\n"
"\t\treplication controller existente e sobrescrever pelo menos uma label comum  no seu "
"replicaSelector.\n"
"\n"
"\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate.svg)"

#: pkg/kubectl/cmd/replace.go:40
msgid ""
"\n"
"\t\tReplace a resource by filename or stdin.\n"
"\n"
"\t\tJSON and YAML formats are accepted. If replacing an existing resource, the\n"
"\t\tcomplete resource spec must be provided. This can be obtained by\n"
"\n"
"\t\t    $ kubectl get TYPE NAME -o yaml\n"
"\n"
"\t\tPlease refer to the models in https://htmlpreview.github.io/?https://github.com/kubernetes/"
"kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html to find if a field is mutable."
msgstr ""
"\n"
"\t\tSubstitui um recurso pelo especificado em um arquivo ou via stdin.\n"
"\n"
"\t\tOs formatos JSON and YAML são aceitos. Quando substituindo recursos existentes,\n"
"\t\a especificação completa do recurso deve ser fornecida. Isto pode ser obtido com\n"
"\n"
"\t\t    $ kubectl get TYPE NAME -o yaml\n"
"\n"
"\t\tConsulte os modelos em https://htmlpreview.github.io/?https://github.com/kubernetes/"
"kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html para descobrir se um campo é mutável."

#: pkg/kubectl/cmd/scale.go:34
msgid ""
"\n"
"\t\tSet a new size for a Deployment, ReplicaSet, Replication Controller, or Job.\n"
"\n"
"\t\tScale also allows users to specify one or more preconditions for the scale action.\n"
"\n"
"\t\tIf --current-replicas or --resource-version is specified, it is validated before the\n"
"\t\tscale is attempted, and it is guaranteed that the precondition holds true when the\n"
"\t\tscale is sent to the server."
msgstr ""
"\n"
"\t\tDefine um novo tamanho para um Deployment, ReplicaSet, Replication Controller, ou Job.\n"
"\n"
"\t\tScale deixa os usuários especificar uma ou mais pre-condições para a ação de scale.\n"
"\n"
"\t\tSe --current-replicas ou --resource-version forem especificados, será validado antes\n"
"\t\tda tentativa de scale, e garante que a  pre-condição é verdadeira quando\n"
"\t\to scale é enviado para o servidor."

#: pkg/kubectl/cmd/apply_set_last_applied.go:62
msgid ""
"\n"
"\t\tSet the latest last-applied-configuration annotations by setting it to match the contents of "
"a file.\n"
"\t\tThis results in the last-applied-configuration being updated as though 'kubectl apply -f "
"<file>' was run,\n"
"\t\twithout updating any other parts of the object."
msgstr ""
"\n"
"\t\tDefine a annotation last-applied-configuration configurando para ser igual ao conteúdo do "
"arquivo.\n"
"\t\tIsto resulta no last-applied-configuration ser atualizado quando o 'kubectl apply -f <file>' "
"executa,\n"
"\t\tnão atualizando as outras partes do objeto."

#: pkg/kubectl/cmd/proxy.go:36
msgid ""
"\n"
"\t\tTo proxy all of the kubernetes api and nothing else, use:\n"
"\n"
"\t\t    $ kubectl proxy --api-prefix=/\n"
"\n"
"\t\tTo proxy only part of the kubernetes api and also some static files:\n"
"\n"
"\t\t    $ kubectl proxy --www=/my/files --www-prefix=/static/ --api-prefix=/api/\n"
"\n"
"\t\tThe above lets you 'curl localhost:8001/api/v1/pods'.\n"
"\n"
"\t\tTo proxy the entire kubernetes api at a different root, use:\n"
"\n"
"\t\t    $ kubectl proxy --api-prefix=/custom/\n"
"\n"
"\t\tThe above lets you 'curl localhost:8001/custom/api/v1/pods'"
msgstr ""
"\n"
"\t\tPara fazer o proxy the todas as apis do kubernetes, utilize:\n"
"\n"
"\t\t    $ kubectl proxy —api-prefix=/\n"
"\n"
"\t\tPara fazer o proxy de parte da api do kubernetes e alguns arquivos estáticos:\n"
"\n"
"\t\t    $ kubectl proxy —www=/my/files —www-prefix=/static/ —api-prefix=/api/\n"
"\n"
"\t\tCom os comandos acima você pode fazer 'curl localhost:8001/api/v1/pods'.\n"
"\n"
"\t\tPara fazer o proxy the todas as apis do kubernetes em um caminho diferente, utilize:\n"
"\n"
"\t\t    $ kubectl proxy —api-prefix=/custom/\n"
"\n"
"\t\tCom o comando acima você pode fazer 'curl localhost:8001/custom/api/v1/pods'"

#: pkg/kubectl/cmd/patch.go:59
msgid ""
"\n"
"\t\tUpdate field(s) of a resource using strategic merge patch\n"
"\n"
"\t\tJSON and YAML formats are accepted.\n"
"\n"
"\t\tPlease refer to the models in https://htmlpreview.github.io/?https://github.com/kubernetes/"
"kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html to find if a field is mutable."
msgstr ""
"\n"
"\t\tAtualiza o(s) campo(s) de um recurso usando strategic merge patch\n"
"\n"
"\t\tFormatos JSON e YAML são aceitos.\n"
"\n"
"\t\tConsulte os modelos em https://htmlpreview.github.io/?https://github.com/kubernetes/"
"kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html para descobrir se um campo é mutável."

#: pkg/kubectl/cmd/label.go:70
#, c-format
msgid ""
"\n"
"\t\tUpdate the labels on a resource.\n"
"\n"
"\t\t* A label must begin with a letter or number, and may contain letters, numbers, hyphens, "
"dots, and underscores, up to %[1]d characters.\n"
"\t\t* If --overwrite is true, then existing labels can be overwritten, otherwise attempting to "
"overwrite a label will result in an error.\n"
"\t\t* If --resource-version is specified, then updates will use this resource version, otherwise "
"the existing resource-version will be used."
msgstr ""
"\n"
"\t\tAtualiza labels em um recurso.\n"
"\n"
"\t\t* Um label deve começar com uma letra ou número, e pode conter letra, números, hífens, "
"pontos e sublinhados, com no máximo %[1]d caracteres.\n"
"\t\t* Se --overwrite for verdadeiro, então labels podem ser sobreescritos, caso contrário a "
"sobreescrita irá falhar.\n"
"\t\t* Se --resource-version for especificado, então as atualizações usarão esta versão do "
"recurso, caso contrário, a versão do recurso existente será usada."

#: pkg/kubectl/cmd/taint.go:58
#, c-format
msgid ""
"\n"
"\t\tUpdate the taints on one or more nodes.\n"
"\n"
"\t\t* A taint consists of a key, value, and effect. As an argument here, it is expressed as "
"key=value:effect.\n"
"\t\t* The key must begin with a letter or number, and may contain letters, numbers, hyphens, "
"dots, and underscores, up to %[1]d characters.\n"
"\t\t* The value must begin with a letter or number, and may contain letters, numbers, hyphens, "
"dots, and underscores, up to %[2]d characters.\n"
"\t\t* The effect must be NoSchedule, PreferNoSchedule or NoExecute.\n"
"\t\t* Currently taint can only apply to node."
msgstr ""
"\n"
"\t\tAtualiza os taints em um ou mais nodes.\n"
"\n"
"\t\t* Um taint consiste em uma chave, valor e efeito. Como arqgumento, é expressado como "
"chave=valor:efeito.\n"
"\t\t* Uma chave deve começar com uma letra ou número, e pode conter letras, números, hífens, "
"pontos e sublinhados, com no máximo %[1]d caractéres.\n"
"\t\t* Um valor deve começar com uma letra ou número, e pode conter letras, números, hífens, "
"pontos e sublinhados, com no máximo %[2]d caractéres.\n"
"\t\t* O efeito deve ser NoSchedule, PreferNoSchedule ou NoExecute.\n"
"\t\t* Atualmente taint pode ser aplicado apenas para nodes."

#: pkg/kubectl/cmd/apply_view_last_applied.go:46
msgid ""
"\n"
"\t\tView the latest last-applied-configuration annotations by type/name or file.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use -o option\n"
"\t\tto change output format."
msgstr ""
"\n"
"\t\tView the latest last-applied-configuration annotations by type/name or file.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use -o option\n"
"\t\tto change output format."

#: pkg/kubectl/cmd/cp.go:37
msgid ""
"\n"
"\t    # !!!Important Note!!!\n"
"\t    # Requires that the 'tar' binary is present in your container\n"
"\t    # image.  If 'tar' is not present, 'kubectl cp' will fail.\n"
"\n"
"\t    # Copy /tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in the default "
"namespace\n"
"\t\tkubectl cp /tmp/foo_dir <some-pod>:/tmp/bar_dir\n"
"\n"
"        # Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific container\n"
"\t\tkubectl cp /tmp/foo <some-pod>:/tmp/bar -c <specific-container>\n"
"\n"
"\t\t# Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace <some-namespace>\n"
"\t\tkubectl cp /tmp/foo <some-namespace>/<some-pod>:/tmp/bar\n"
"\n"
"\t\t# Copy /tmp/foo from a remote pod to /tmp/bar locally\n"
"\t\tkubectl cp <some-namespace>/<some-pod>:/tmp/foo /tmp/bar"
msgstr ""
"\n"
"\t    # !!!Nota Importante!!!\n"
"\t    # Necessita que o binário 'tar' esteja presente na imagem do\n"
"\t    # container.  Se 'tar' não estiver presente, o 'kubectl cp' irá falhar.\n"
"\n"
"\t    # Copia o diretório local /tmp/foo_dir para /tmp/bar_dir no pod remoto no namespace "
"default\n"
"\t\tkubectl cp /tmp/foo_dir <some-pod>:/tmp/bar_dir\n"
"\n"
"        # Copia o arquivo local /tmp/foo para /tmp/bar no pod remoto no container específico\n"
"\t\tkubectl cp /tmp/foo <some-pod>:/tmp/bar -c <specific-container>\n"
"\n"
"\t\t# Copia o arquivo local /tmp/foo para /tmp/bar no pod remoto no namespace <some-namespace>\n"
"\t\tkubectl cp /tmp/foo <some-namespace>/<some-pod>:/tmp/bar\n"
"\n"
"\t\t# Copia /tmp/foo do pod remoto para /tmp/bar localmente\n"
"\t\tkubectl cp <some-namespace>/<some-pod>:/tmp/foo /tmp/bar"

#: pkg/kubectl/cmd/create_secret.go:205
msgid ""
"\n"
"\t  # Create a new TLS secret named tls-secret with the given key pair:\n"
"\t  kubectl create secret tls tls-secret --cert=path/to/tls.cert --key=path/to/tls.key"
msgstr ""
"\n"
"\t  # Cria um novo segredo TLS chamado tls-secret com o par the chaves fornecido:\n"
"\t  kubectl create secret tls tls-secret —cert=path/to/tls.cert —key=path/to/tls.key"

#: pkg/kubectl/cmd/create_namespace.go:35
msgid ""
"\n"
"\t  # Create a new namespace named my-namespace\n"
"\t  kubectl create namespace my-namespace"
msgstr ""
"\n"
"\t  # Cria um novo namespace chamado my-namespace\n"
"\t  kubectl create namespace my-namespace"

#: pkg/kubectl/cmd/create_secret.go:59
msgid ""
"\n"
"\t  # Create a new secret named my-secret with keys for each file in folder bar\n"
"\t  kubectl create secret generic my-secret --from-file=path/to/bar\n"
"\n"
"\t  # Create a new secret named my-secret with specified keys instead of names on disk\n"
"\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/.ssh/id_rsa --from-"
"file=ssh-publickey=~/.ssh/id_rsa.pub\n"
"\n"
"\t  # Create a new secret named my-secret with key1=supersecret and key2=topsecret\n"
"\t  kubectl create secret generic my-secret --from-literal=key1=supersecret --from-"
"literal=key2=topsecret"
msgstr ""
"\n"
"\t  # Cria um novo segredo chamado my-secret com as chaves para cada arquivo no diretório bar\n"
"\t  kubectl create secret generic my-secret --from-file=path/to/bar\n"
"\n"
"\t  # Cria um novo segredo chamado my-secret com chaves especificadas em vez dos nomes dos "
"arquivos\n"
"\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/.ssh/id_rsa --from-"
"file=ssh-publickey=~/.ssh/id_rsa.pub\n"
"\n"
"\t  # Cria um novo segredo chamado my-secret com key1=supersecret e key2=topsecret\n"
"\t  kubectl create secret generic my-secret --from-literal=key1=supersecret --from-"
"literal=key2=topsecret"

#: pkg/kubectl/cmd/create_serviceaccount.go:35
msgid ""
"\n"
"\t  # Create a new service account named my-service-account\n"
"\t  kubectl create serviceaccount my-service-account"
msgstr ""
"\n"
"\t  # Cria um novo service account chamado my-service-account\n"
"\t  kubectl create serviceaccount my-service-account"

#: pkg/kubectl/cmd/create_service.go:232
msgid ""
"\n"
"\t# Create a new ExternalName service named my-ns \n"
"\tkubectl create service externalname my-ns --external-name bar.com"
msgstr ""
"\n"
"\t# Cria um novo serviço do tipo ExternalName chamado my-ns \n"
"\tkubectl create service externalname my-ns —external-name bar.com"

#: pkg/kubectl/cmd/create_service.go:225
msgid ""
"\n"
"\tCreate an ExternalName service with the specified name.\n"
"\n"
"\tExternalName service references to an external DNS address instead of\n"
"\tonly pods, which will allow application authors to reference services\n"
"\tthat exist off platform, on other clusters, or locally."
msgstr ""
"\n"
"\tCria um serviço do tipo ExternalName com o nome especificado.\n"
"\n"
"\tServiço ExternalName referencia um endereço externo de DNS ao invés de\n"
"\tapenas pods, o que permite aos desenvolvedores de aplicações referenciar serviços\n"
"\tque existem fora da plataforma, em outros clusters ou localmente."

#: pkg/kubectl/cmd/help.go:30
msgid ""
"\n"
"\tHelp provides help for any command in the application.\n"
"\tSimply type kubectl help [path to command] for full details."
msgstr ""
"\n"
"\tHelp provê ajuda para qualquer comando na aplicação.\n"
"\tDigite simplesmente kubectl help [caminho do comando] para detalhes completos."

#: pkg/kubectl/cmd/create_service.go:173
msgid ""
"\n"
"    # Create a new LoadBalancer service named my-lbs\n"
"    kubectl create service loadbalancer my-lbs --tcp=5678:8080"
msgstr ""
"\n"
"    # Cria um novo serviço do tipo LoadBalancer chamado my-lbs\n"
"    kubectl create service loadbalancer my-lbs —tcp=5678:8080"

#: pkg/kubectl/cmd/create_service.go:53
msgid ""
"\n"
"    # Create a new clusterIP service named my-cs\n"
"    kubectl create service clusterip my-cs --tcp=5678:8080\n"
"\n"
"    # Create a new clusterIP service named my-cs (in headless mode)\n"
"    kubectl create service clusterip my-cs --clusterip=\"None\""
msgstr ""
"\n"
"    # Cria um novo serviço clusterIP chamado my-cs\n"
"    kubectl create service clusterip my-cs --tcp=5678:8080\n"
"\n"
"    # Cria um novo serviço clusterIP chamado my-cs (em modo headless)\n"
"    kubectl create service clusterip my-cs --clusterip=\"None\""

#: pkg/kubectl/cmd/create_deployment.go:36
msgid ""
"\n"
"    # Create a new deployment named my-dep that runs the busybox image.\n"
"    kubectl create deployment my-dep --image=busybox"
msgstr ""
"\n"
"    # Cria um novo deployment chamado my-dep que executa uma imagem busybox.\n"
"    kubectl create deployment my-dep —image=busybox"

#: pkg/kubectl/cmd/create_service.go:116
msgid ""
"\n"
"    # Create a new nodeport service named my-ns\n"
"    kubectl create service nodeport my-ns --tcp=5678:8080"
msgstr ""
"\n"
"    # Cria um novo serviço nodeport chamado my-ns\n"
"    kubectl create service nodeport my-ns —tcp=5678:8080"

#: pkg/kubectl/cmd/clusterinfo_dump.go:62
msgid ""
"\n"
"    # Dump current cluster state to stdout\n"
"    kubectl cluster-info dump\n"
"\n"
"    # Dump current cluster state to /path/to/cluster-state\n"
"    kubectl cluster-info dump --output-directory=/path/to/cluster-state\n"
"\n"
"    # Dump all namespaces to stdout\n"
"    kubectl cluster-info dump --all-namespaces\n"
"\n"
"    # Dump a set of namespaces to /path/to/cluster-state\n"
"    kubectl cluster-info dump --namespaces default,kube-system --output-directory=/path/to/"
"cluster-state"
msgstr ""
"\n"
"    # Coleta o estado corrente do cluster e exibe no stdout\n"
"    kubectl cluster-info dump\n"
"\n"
"    # Coleta o estado corrente do custer para /path/to/cluster-state\n"
"    kubectl cluster-info dump --output-directory=/path/to/cluster-state\n"
"\n"
"    # Coleta informação de todos os namespaces para stdout\n"
"    kubectl cluster-info dump --all-namespaces\n"
"\n"
"    # Coleta o conjunto especificado de namespaces para /path/to/cluster-state\n"
"    kubectl cluster-info dump --namespaces default,kube-system --output-directory=/path/to/"
"cluster-state"

#: pkg/kubectl/cmd/annotate.go:78
msgid ""
"\n"
"    # Update pod 'foo' with the annotation 'description' and the value 'my frontend'.\n"
"    # If the same annotation is set multiple times, only the last value will be applied\n"
"    kubectl annotate pods foo description='my frontend'\n"
"\n"
"    # Update a pod identified by type and name in \"pod.json\"\n"
"    kubectl annotate -f pod.json description='my frontend'\n"
"\n"
"    # Update pod 'foo' with the annotation 'description' and the value 'my frontend running "
"nginx', overwriting any existing value.\n"
"    kubectl annotate --overwrite pods foo description='my frontend running nginx'\n"
"\n"
"    # Update all pods in the namespace\n"
"    kubectl annotate pods --all description='my frontend running nginx'\n"
"\n"
"    # Update pod 'foo' only if the resource is unchanged from version 1.\n"
"    kubectl annotate pods foo description='my frontend running nginx' --resource-version=1\n"
"\n"
"    # Update pod 'foo' by removing an annotation named 'description' if it exists.\n"
"    # Does not require the --overwrite flag.\n"
"    kubectl annotate pods foo description-"
msgstr ""
"\n"
"    # Atualiza o pod 'foo' com a annotation 'description' e o valor 'my frontend'.\n"
"    # Se a mesma annotation é configurada várias vezes, apenas o último valor será utilizado\n"
"    kubectl annotate pods foo description='my frontend'\n"
"\n"
"    # Atualiza o pod identificado pelo tipo e nome definido no \"pod.json\"\n"
"    kubectl annotate -f pod.json description='my frontend'\n"
"\n"
"    # Atualiza o pod 'foo' com a annotation 'description' e o valor 'my frontend running nginx', "
"sobreescrevendo qualquer valor existente.\n"
"    kubectl annotate --overwrite pods foo description='my frontend running nginx'\n"
"\n"
"    # Atualiza todos os pods no namespace\n"
"    kubectl annotate pods --all description='my frontend running nginx'\n"
"\n"
"    # Atualiza o pod 'foo' apenas se o recurso não foi modificado na versão 1.\n"
"    kubectl annotate pods foo description='my frontend running nginx' --resource-version=1\n"
"\n"
"    # Atualiza o pod 'foo' removendo a annotation chamada 'description' se ela existir.\n"
"    # Não necessita da flag --overwrite.\n"
"    kubectl annotate pods foo description-"

#: pkg/kubectl/cmd/create_service.go:170
msgid ""
"\n"
"    Create a LoadBalancer service with the specified name."
msgstr ""
"\n"
"    Cria um serviço do tipo LoadBalancer com o nome especificado."

#: pkg/kubectl/cmd/create_service.go:50
msgid ""
"\n"
"    Create a clusterIP service with the specified name."
msgstr ""
"\n"
"    Cria um serviço do tipo clusterIP com o nome especificado."

#: pkg/kubectl/cmd/create_deployment.go:33
msgid ""
"\n"
"    Create a deployment with the specified name."
msgstr ""
"\n"
"    Cria um deployment com o nome especificado."

#: pkg/kubectl/cmd/create_service.go:113
msgid ""
"\n"
"    Create a nodeport service with the specified name."
msgstr ""
"\n"
"    Cria um serviço do tipo nodeport com o nome especificado."

#: pkg/kubectl/cmd/clusterinfo_dump.go:53
msgid ""
"\n"
"    Dumps cluster info out suitable for debugging and diagnosing cluster problems.  By default, "
"dumps everything to\n"
"    stdout. You can optionally specify a directory with --output-directory.  If you specify a "
"directory, kubernetes will\n"
"    build a set of files in that directory.  By default only dumps things in the 'kube-system' "
"namespace, but you can\n"
"    switch to a different namespace with the --namespaces flag, or specify --all-namespaces to "
"dump all namespaces.\n"
"\n"
"    The command also dumps the logs of all of the pods in the cluster, these logs are dumped "
"into different directories\n"
"    based on namespace and pod name."
msgstr ""
"\n"
"    Coleta informações do cluster para debugar e diagnosticar problemas do dele.  Por padrão, "
"exibe tudo para o\n"
"    stdout. Você pode, se quiser, especificar um diretório com --output-directory.  Se "
"especificar o diretório, kubernetes irá\n"
"    montar um conjunto de arquivos no diretório.  Por padrão, apenas coleta informações no "
"namespace 'kube-system' , mas você pode\n"
"    trocar para um namespace diferente com a flag --namespaces, ou especificar --all-namespaces "
"para todos os namespaces.\n"
"\n"
"    O comando também coleta os logs de todos os pods no cluster, estes logs são salvos em outros "
"diretórios\n"
"    baseado no namespace e nome do pod."

#: pkg/kubectl/cmd/clusterinfo.go:37
msgid ""
"\n"
"  Display addresses of the master and services with label kubernetes.io/cluster-service=true\n"
"  To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'."
msgstr ""
"\n"
"  Mostra os endereços dos servidores de gerenciamento e serviços com o label kubernetes.io/"
"cluster-service=true\n"
"  Para debugar e diagnosticar outros problemas do cluster, utilize 'kubectl cluster-info dump'."

#: pkg/kubectl/cmd/create_quota.go:62
msgid "A comma-delimited set of quota scopes that must all match each object tracked by the quota."
msgstr ""
"Lista de valores delimitados por vírgulas para um conjunto de escopos de quota que devem "
"corresponder para cada objeto rastreado pela quota."

#: pkg/kubectl/cmd/create_quota.go:61
msgid "A comma-delimited set of resource=quantity pairs that define a hard limit."
msgstr ""
"Lista de valores delimitados por vírgulas ajusta os pares resource=quantity que define um limite "
"rigído."

#: pkg/kubectl/cmd/create_pdb.go:64
msgid ""
"A label selector to use for this budget. Only equality-based selector requirements are supported."
msgstr ""
"Um seletor de label a ser usado para o PDB. Apenas seletores baseado em igualdade são suportados."

#: pkg/kubectl/cmd/expose.go:104
msgid ""
"A label selector to use for this service. Only equality-based selector requirements are "
"supported. If empty (the default) infer the selector from the replication controller or replica "
"set.)"
msgstr ""
"Um seletor de label para ser utilizado neste serviço. Apenas seletores baseado em igualdade são "
"suportados. Se vazio (por padrão) o seletor do replication controller ou replica set será "
"utilizado."

#: pkg/kubectl/cmd/run.go:139
msgid "A schedule in the Cron format the job should be run with."
msgstr "Agendamento no formato Cron em qual o job deve rodar."

#: pkg/kubectl/cmd/expose.go:109
msgid ""
"Additional external IP address (not managed by Kubernetes) to accept for the service. If this IP "
"is routed to a node, the service can be accessed by this IP in addition to its generated service "
"IP."
msgstr ""
"Um IP externo adicional (não gerenciado pelo Kubernetes) para ser usado no serviço. Se este IP "
"for roteado para um nó, o serviço pode ser acessado por este IP além de seu IP de serviço gerado."

#: pkg/kubectl/cmd/expose.go:110 pkg/kubectl/cmd/run.go:122
msgid ""
"An inline JSON override for the generated object. If this is non-empty, it is used to override "
"the generated object. Requires that the object supply a valid apiVersion field."
msgstr ""
"Uma substituição inline JSON para o objeto gerado. Se não estiver vazio, ele será usado para "
"substituir o objeto gerado. Requer que o objeto forneça um campo apiVersion válido."

#: pkg/kubectl/cmd/run.go:137
msgid ""
"An inline JSON override for the generated service object. If this is non-empty, it is used to "
"override the generated object. Requires that the object supply a valid apiVersion field.  Only "
"used if --expose is true."
msgstr ""
"Uma substituição inline JSON para o objeto de serviço gerado. Se não estiver vazio, ele será "
"usado para substituir o objeto gerado. Requer que o objeto forneça o campo apiVersion válido.  "
"Usado apenas se --expose for true."

#: pkg/kubectl/cmd/apply.go:104
msgid "Apply a configuration to a resource by filename or stdin"
msgstr "Aplica a configuração para um recurso utilizado um nome de arquivo ou stdin"

#: pkg/kubectl/cmd/certificates.go:72
msgid "Approve a certificate signing request"
msgstr "Aprova uma solicitação de assinatura de certificado"

#: pkg/kubectl/cmd/create_service.go:82
msgid "Assign your own ClusterIP or set to 'None' for a 'headless' service (no loadbalancing)."
msgstr ""
"Atribuir o seu próprio ClusterIP ou configura para 'None' para um serviço 'headless' (sem "
"loadbalancing)."

#: pkg/kubectl/cmd/attach.go:70
msgid "Attach to a running container"
msgstr "Se conecta a um container em execução"

#: pkg/kubectl/cmd/autoscale.go:56
msgid "Auto-scale a Deployment, ReplicaSet, or ReplicationController"
msgstr "Auto-escala um Deployment, ReplicaSet ou ReplicationController"

#: pkg/kubectl/cmd/expose.go:113
msgid ""
"ClusterIP to be assigned to the service. Leave empty to auto-allocate, or set to 'None' to "
"create a headless service."
msgstr ""
"ClusterIP que será atribuído ao serviço. Deixe vazio para auto atribuição, ou configure para "
"'None' para criar um serviço headless."

#: pkg/kubectl/cmd/create_clusterrolebinding.go:56
msgid "ClusterRole this ClusterRoleBinding should reference"
msgstr "ClusterRole que esse ClusterRoleBinding deve referenciar"

#: pkg/kubectl/cmd/create_rolebinding.go:56
msgid "ClusterRole this RoleBinding should reference"
msgstr "ClusterRole que esse RoleBinding deve referenciar"

#: pkg/kubectl/cmd/rollingupdate.go:102
msgid ""
"Container name which will have its image upgraded. Only relevant when --image is specified, "
"ignored otherwise. Required when using --image on a multi-container pod"
msgstr ""
"Nome do contêiner que terá sua imagem atualizada. Relevante apenas quando --image for "
"especificado, caso contrário, ignorado. Obrigatório ao usar --image em um pod com vários "
"contêineres"

#: pkg/kubectl/cmd/convert.go:68
msgid "Convert config files between different API versions"
msgstr "Converte arquivos de configuração entre versões de API diferentes"

#: pkg/kubectl/cmd/cp.go:65
msgid "Copy files and directories to and from containers."
msgstr "Copia arquivos e diretórios de e para containers."

#: pkg/kubectl/cmd/create_clusterrolebinding.go:44
msgid "Create a ClusterRoleBinding for a particular ClusterRole"
msgstr "Cria um ClusterRoleBinding para um ClusterRole especifico"

#: pkg/kubectl/cmd/create_service.go:182
msgid "Create a LoadBalancer service."
msgstr "Cria um serviço do tipo LoadBalancer."

#: pkg/kubectl/cmd/create_service.go:125
msgid "Create a NodePort service."
msgstr "Cria um serviço do tipo NodePort."

#: pkg/kubectl/cmd/create_rolebinding.go:44
msgid "Create a RoleBinding for a particular Role or ClusterRole"
msgstr "Cria um RoleBinding para uma Role ou ClusterRole especifico"

#: pkg/kubectl/cmd/create_secret.go:214
msgid "Create a TLS secret"
msgstr "Cria uma secret do tipo TLS"

#: pkg/kubectl/cmd/create_service.go:69
msgid "Create a clusterIP service."
msgstr "Cria um serviço do tipo clusterIP."

#: pkg/kubectl/cmd/create_configmap.go:60
msgid "Create a configmap from a local file, directory or literal value"
msgstr "Cria um configmap com base em um arquivo, diretório, ou um valor literal"

#: pkg/kubectl/cmd/create_deployment.go:46
msgid "Create a deployment with the specified name."
msgstr "Cria um deployment com um nome especificado."

#: pkg/kubectl/cmd/create_namespace.go:45
msgid "Create a namespace with the specified name"
msgstr "Cria a namespace com um nome especificado"

#: pkg/kubectl/cmd/create_pdb.go:50
msgid "Create a pod disruption budget with the specified name."
msgstr "Cria um pod disruption budget com um nome especificado."

#: pkg/kubectl/cmd/create_quota.go:48
msgid "Create a quota with the specified name."
msgstr "Cria uma quota com um nome especificado."

#: pkg/kubectl/cmd/create.go:63
msgid "Create a resource by filename or stdin"
msgstr "Cria um recurso por nome de arquivo ou stdin"

#: pkg/kubectl/cmd/create_secret.go:144
msgid "Create a secret for use with a Docker registry"
msgstr "Cria um secret para ser utilizado com o Docker registry"

#: pkg/kubectl/cmd/create_secret.go:74
msgid "Create a secret from a local file, directory or literal value"
msgstr "Cria um secret com base em um arquivo, diretório ou um valor literal"

#: pkg/kubectl/cmd/create_secret.go:35
msgid "Create a secret using specified subcommand"
msgstr "Cria um secret utilizando um sub-comando especificado"

#: pkg/kubectl/cmd/create_serviceaccount.go:45
msgid "Create a service account with the specified name"
msgstr "Cria uma conta de serviço com um nome especificado"

#: pkg/kubectl/cmd/create_service.go:37
msgid "Create a service using specified subcommand."
msgstr "Cria um service utilizando um sub-comando especificado."

#: pkg/kubectl/cmd/create_service.go:241
msgid "Create an ExternalName service."
msgstr "Cria um serviço do tipo ExternalName."

#: pkg/kubectl/cmd/delete.go:132
msgid ""
"Delete resources by filenames, stdin, resources and names, or by resources and label selector"
msgstr ""
"Apaga os recusros por nome de arquivos, stdin, recursos e nomes, ou por recursos e seletor de "
"label"

#: pkg/kubectl/cmd/config/delete_cluster.go:39
msgid "Delete the specified cluster from the kubeconfig"
msgstr "Apaga o cluster especificado do kubeconfig"

#: pkg/kubectl/cmd/config/delete_context.go:39
msgid "Delete the specified context from the kubeconfig"
msgstr "Apaga o contexto especificado do kubeconfig"

#: pkg/kubectl/cmd/certificates.go:122
msgid "Deny a certificate signing request"
msgstr "Rejeita o pedido de assinatura do certificado"

#: pkg/kubectl/cmd/stop.go:59
msgid "Deprecated: Gracefully shut down a resource by name or filename"
msgstr "Descontinuado: Termina um recurso por nome ou nome de arquivo"

#: pkg/kubectl/cmd/config/get_contexts.go:64
msgid "Describe one or many contexts"
msgstr "Mostra um ou mais contextos"

#: pkg/kubectl/cmd/top_node.go:78
msgid "Display Resource (CPU/Memory) usage of nodes"
msgstr "Mostra a utilização de recursos (CPU/Memória) nos nodes"

#: pkg/kubectl/cmd/top_pod.go:80
msgid "Display Resource (CPU/Memory) usage of pods"
msgstr "Mostra a utilização de recursos (CPU/Memória) nos pods"

#: pkg/kubectl/cmd/top.go:44
msgid "Display Resource (CPU/Memory) usage."
msgstr "Mostra a utilização de recursos (CPU/Memória)."

#: pkg/kubectl/cmd/clusterinfo.go:51
msgid "Display cluster info"
msgstr "Mostra as informações do cluster"

#: pkg/kubectl/cmd/config/get_clusters.go:41
msgid "Display clusters defined in the kubeconfig"
msgstr "Mostra os clusters definidos no kubeconfig"

#: pkg/kubectl/cmd/config/view.go:67
msgid "Display merged kubeconfig settings or a specified kubeconfig file"
msgstr "Mostra a configuração do kubeconfig mescladas ou um arquivo kubeconfig especificado"

#: pkg/kubectl/cmd/get.go:111
msgid "Display one or many resources"
msgstr "Mostra um ou mais recursos"

#: pkg/kubectl/cmd/config/current_context.go:49
msgid "Displays the current-context"
msgstr "Mostra o contexto corrente"

#: pkg/kubectl/cmd/explain.go:51
msgid "Documentation of resources"
msgstr "Documentação dos recursos"

#: pkg/kubectl/cmd/drain.go:178
msgid "Drain node in preparation for maintenance"
msgstr "Drenar o node para preparação de manutenção"

#: pkg/kubectl/cmd/clusterinfo_dump.go:39
msgid "Dump lots of relevant info for debugging and diagnosis"
msgstr "Realiza o dump de muitas informações relevantes para debugging e diagnósticos"

#: pkg/kubectl/cmd/edit.go:110
msgid "Edit a resource on the server"
msgstr "Edita um recurso no servidor"

#: pkg/kubectl/cmd/create_secret.go:160
msgid "Email for Docker registry"
msgstr "Email para o Docker registry"

#: pkg/kubectl/cmd/exec.go:69
msgid "Execute a command in a container"
msgstr "Executa um comando em um container"

#: pkg/kubectl/cmd/rollingupdate.go:103
msgid ""
"Explicit policy for when to pull container images. Required when --image is same as existing "
"image, ignored otherwise."
msgstr ""
"Política explícita para quando extrair imagens de contêiner. Obrigatório quando --image for "
"igual à imagem existente, caso contrário, será ignorado."

#: pkg/kubectl/cmd/portforward.go:76
msgid "Forward one or more local ports to a pod"
msgstr "Encaminhar uma ou mais portas locais para um pod"

#: pkg/kubectl/cmd/help.go:37
msgid "Help about any command"
msgstr "Ajuda sobre qualquer comando"

#: pkg/kubectl/cmd/expose.go:103
msgid ""
"IP to assign to the Load Balancer. If empty, an ephemeral IP will be created and used (cloud-"
"provider specific)."
msgstr ""
"IP para ser alocado no Load Balancer. Se vazio, um IP efêmero será criado e utilizado "
"(específico para cada provedor cloud)."

#: pkg/kubectl/cmd/expose.go:112
msgid ""
"If non-empty, set the session affinity for the service to this; legal values: 'None', 'ClientIP'"
msgstr ""
"Se não vazio, configura a afinidade de sessão para o serviço; valores válidos: 'None', 'ClientIP'"

#: pkg/kubectl/cmd/annotate.go:136
msgid ""
"If non-empty, the annotation update will only succeed if this is the current resource-version "
"for the object. Only valid when specifying a single resource."
msgstr ""
"Se não estiver vazio, a atualização dos annotation só terá êxito se esta for a versão do recurso "
"atual para o objeto. Válido apenas ao especificar um único recurso."

#: pkg/kubectl/cmd/label.go:134
msgid ""
"If non-empty, the labels update will only succeed if this is the current resource-version for "
"the object. Only valid when specifying a single resource."
msgstr ""
"Se não estiver vazio, a atualização dos labels só terá êxito se esta for a versão do recurso "
"atual para o objeto. Válido apenas ao especificar um único recurso."

#: pkg/kubectl/cmd/rollingupdate.go:99
msgid ""
"Image to use for upgrading the replication controller. Must be distinct from the existing image "
"(either new image or new image tag).  Can not be used with --filename/-f"
msgstr ""
"Imagem a ser utilizada para atualizar o replication controller. Deve ser diferente da imagem "
"atual (pode ser uma nova imagem ou uma nova tag). Não pode ser utilizada com —filename/-f"

#: pkg/kubectl/cmd/rollout/rollout.go:47
msgid "Manage a deployment rollout"
msgstr "Gerencia um deployment rollout"

#: pkg/kubectl/cmd/drain.go:128
msgid "Mark node as schedulable"
msgstr "Marca o node como agendável"

#: pkg/kubectl/cmd/drain.go:103
msgid "Mark node as unschedulable"
msgstr "Marca o node como não agendável"

#: pkg/kubectl/cmd/rollout/rollout_pause.go:74
msgid "Mark the provided resource as paused"
msgstr "Marca o recurso fornecido como pausado"

#: pkg/kubectl/cmd/certificates.go:36
msgid "Modify certificate resources."
msgstr "Edita o certificado dos recursos."

#: pkg/kubectl/cmd/config/config.go:40
msgid "Modify kubeconfig files"
msgstr "Edita o arquivo kubeconfig"

#: pkg/kubectl/cmd/expose.go:108
msgid ""
"Name or number for the port on the container that the service should direct traffic to. Optional."
msgstr ""
"Nome ou o número da porta em um container em que o serviço deve direcionar o tráfego. Opcional."

#: pkg/kubectl/cmd/logs.go:113
msgid ""
"Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / "
"since may be used."
msgstr ""
"Apenas retorna os logs após uma data específica (RFC3339). Padrão para todos os logs. Apenas um "
"since-time / since deve ser utilizado."

#: pkg/kubectl/cmd/completion.go:104
msgid "Output shell completion code for the specified shell (bash or zsh)"
msgstr "Saída do autocomplete de shell para um Shell específico (bash ou zsh)"

#: pkg/kubectl/cmd/convert.go:85
msgid "Output the formatted object with the given group version (for ex: 'extensions/v1beta1').)"
msgstr ""
"Imprime o objeto formatado com a dada versão de grupo (por exemplo: 'extensions/v1beta1').)"

#: pkg/kubectl/cmd/create_secret.go:158
msgid "Password for Docker registry authentication"
msgstr "Senha para a autenticação do registro do Docker"

#: pkg/kubectl/cmd/create_secret.go:226
msgid "Path to PEM encoded public key certificate."
msgstr "Caminho para a chave pública em formato PEM."

#: pkg/kubectl/cmd/create_secret.go:227
msgid "Path to private key associated with given certificate."
msgstr "Caminho para a chave private associada a um certificado fornecido."

#: pkg/kubectl/cmd/rollingupdate.go:85
msgid "Perform a rolling update of the given ReplicationController"
msgstr "Executa uma atualização contínua"

#: pkg/kubectl/cmd/scale.go:83
msgid ""
"Precondition for resource version. Requires that the current resource version match this value "
"in order to scale."
msgstr ""
"Pré-condição para a versão do recurso. Requer que a versão do recurso atual corresponda a este "
"valor para escalar."

#: pkg/kubectl/cmd/version.go:40
msgid "Print the client and server version information"
msgstr "Mostra a informação de versão do cliente e do servidor"

#: pkg/kubectl/cmd/options.go:38
msgid "Print the list of flags inherited by all commands"
msgstr "Mostra a lista de opções herdadas por todos os comandos"

#: pkg/kubectl/cmd/logs.go:93
msgid "Print the logs for a container in a pod"
msgstr "Mostra os logs de um container em um pod"

#: pkg/kubectl/cmd/replace.go:71
msgid "Replace a resource by filename or stdin"
msgstr "Substitui um recurso por um nome de arquivo ou stdin"

#: pkg/kubectl/cmd/rollout/rollout_resume.go:72
msgid "Resume a paused resource"
msgstr "Retoma um recurso pausado"

#: pkg/kubectl/cmd/create_rolebinding.go:57
msgid "Role this RoleBinding should reference"
msgstr "Role que a RoleBinding deve referenciar"

#: pkg/kubectl/cmd/run.go:97
msgid "Run a particular image on the cluster"
msgstr "Executa uma imagem específica no cluster"

#: pkg/kubectl/cmd/proxy.go:69
msgid "Run a proxy to the Kubernetes API server"
msgstr "Executa um proxy para o servidor de API do Kubernetes"

#: pkg/kubectl/cmd/create_secret.go:161
msgid "Server location for Docker registry"
msgstr "Localização do servidor para o registro do Docker"

#: pkg/kubectl/cmd/scale.go:71
msgid "Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job"
msgstr "Define um novo tamanho para um Deployment, ReplicaSet, Replication Controller, ou Job"

#: pkg/kubectl/cmd/set/set.go:38
msgid "Set specific features on objects"
msgstr "Define funcionalidades específicas em objetos"

#: pkg/kubectl/cmd/apply_set_last_applied.go:83
msgid ""
"Set the last-applied-configuration annotation on a live object to match the contents of a file."
msgstr ""
"Define a anotação last-applied-configuration em um objeto existente para corresponder ao "
"conteúdo do arquivo."

#: pkg/kubectl/cmd/set/set_selector.go:82
msgid "Set the selector on a resource"
msgstr "Define um seletor em um recurso"

#: pkg/kubectl/cmd/config/create_cluster.go:68
msgid "Sets a cluster entry in kubeconfig"
msgstr "Define um cluster no arquivo kubeconfig"

#: pkg/kubectl/cmd/config/create_context.go:58
msgid "Sets a context entry in kubeconfig"
msgstr "Define um contexto no arquivo kubeconfig"

#: pkg/kubectl/cmd/config/create_authinfo.go:104
msgid "Sets a user entry in kubeconfig"
msgstr "Define um usuário no arquivo kubeconfig"

#: pkg/kubectl/cmd/config/set.go:60
msgid "Sets an individual value in a kubeconfig file"
msgstr "Define um valor individual no arquivo kubeconfig"

#: pkg/kubectl/cmd/config/use_context.go:49
msgid "Sets the current-context in a kubeconfig file"
msgstr "Define o current-context no arquivo kubeconfig"

#: pkg/kubectl/cmd/describe.go:86
msgid "Show details of a specific resource or group of resources"
msgstr "Mostra os detalhes de um recurso específico ou de um grupo de recursos"

#: pkg/kubectl/cmd/rollout/rollout_status.go:58
msgid "Show the status of the rollout"
msgstr "Mostra o status de uma atualização dinamica"

#: pkg/kubectl/cmd/expose.go:106
msgid "Synonym for --target-port"
msgstr "Sinônimo para —target-port"

#: pkg/kubectl/cmd/expose.go:88
msgid ""
"Take a replication controller, service, deployment or pod and expose it as a new Kubernetes "
"Service"
msgstr ""
"Pega um replication controlar, service, deployment ou pod e expõe como um novo Serviço do "
"Kubernetes"

#: pkg/kubectl/cmd/run.go:117
msgid "The image for the container to run."
msgstr "A imagem para o container executar."

#: pkg/kubectl/cmd/run.go:119
msgid ""
"The image pull policy for the container. If left empty, this value will not be specified by the "
"client and defaulted by the server"
msgstr ""
"A política de obtenção de imagens. Se deixado em branco, este valor não será especificado pelo "
"cliente e será utilizado o padrão do servidor"

#: pkg/kubectl/cmd/rollingupdate.go:101
msgid ""
"The key to use to differentiate between two different controllers, default 'deployment'.  Only "
"relevant when --image is specified, ignored otherwise"
msgstr ""
"A chave utilizada para diferenciar entre dois controlares diferentes, padrão 'deployment'.  "
"Apenas relevante quando --image é especificado, é ignorado caso contrário"

#: pkg/kubectl/cmd/create_pdb.go:63
msgid "The minimum number or percentage of available pods this budget requires."
msgstr "Um número mínimo ou porcentagem de pods disponíveis que este budget requer."

#: pkg/kubectl/cmd/expose.go:111
msgid "The name for the newly created object."
msgstr "O nome para o objeto recém criado."

#: pkg/kubectl/cmd/autoscale.go:72
msgid ""
"The name for the newly created object. If not specified, the name of the input resource will be "
"used."
msgstr ""
"O nome para o objeto recém criado. Se não especificado, o nome do input resource será utilizado."

#: pkg/kubectl/cmd/run.go:116
msgid ""
"The name of the API generator to use, see http://kubernetes.io/docs/user-guide/kubectl-"
"conventions/#generators for a list."
msgstr ""
"O nome do gerador de API a ser usado, veja a lista em http://kubernetes.io/docs/user-guide/"
"kubectl-conventions/#generators."

#: pkg/kubectl/cmd/autoscale.go:67
msgid "The name of the API generator to use. Currently there is only 1 generator."
msgstr "O nome do gerador de API a ser usado. Atualmente existe apenas 1 gerador."

#: pkg/kubectl/cmd/expose.go:99
msgid ""
"The name of the API generator to use. There are 2 generators: 'service/v1' and 'service/v2'. The "
"only difference between them is that service port in v1 is named 'default', while it is left "
"unnamed in v2. Default is 'service/v2'."
msgstr ""
"O nome do gerador de API a ser usado. Existem 2 geradores: 'service/v1' e 'service/v2'. A única "
"diferença entre eles é que a porta de serviço na v1 é chamada de 'default', enquanto ela é "
"deixada sem nome na v2. O padrão é 'service/v2'."

#: pkg/kubectl/cmd/run.go:136
msgid "The name of the generator to use for creating a service.  Only used if --expose is true"
msgstr ""
"O nome do recurso para ser utilizado quando criando um serviço.  Apenas utilizado se —expose é "
"verdadeiro"

#: pkg/kubectl/cmd/expose.go:100
msgid "The network protocol for the service to be created. Default is 'TCP'."
msgstr "O protocolo de rede para o serviço ser criado. Padrão é 'TCP'."

#: pkg/kubectl/cmd/expose.go:101
msgid ""
"The port that the service should serve on. Copied from the resource being exposed, if unspecified"
msgstr ""
"A porta para que o serviço possa servir. Copiado do recurso sendo exposto, se não especificado"

#: pkg/kubectl/cmd/run.go:124
msgid ""
"The port that this container exposes.  If --expose is true, this is also the port used by the "
"service that is created."
msgstr ""
"A porta que o container expõe.  Se —expose é verdadeiro, esta também é a porta utilizada pelo "
"serviço quando for criado."

#: pkg/kubectl/cmd/run.go:134
msgid ""
"The resource requirement limits for this container.  For example, 'cpu=200m,memory=512Mi'.  Note "
"that server side components may assign limits depending on the server configuration, such as "
"limit ranges."
msgstr ""
"O recurso requerido para este container.  Por exemplo, 'cpu=200m,memory=512Mi'.  Observe que os "
"componentes do lado do servidor podem atribuir limites, dependendo da configuração do servidor, "
"como intervalos de limite."

#: pkg/kubectl/cmd/run.go:133
msgid ""
"The resource requirement requests for this container.  For example, 'cpu=100m,memory=256Mi'.  "
"Note that server side components may assign requests depending on the server configuration, such "
"as limit ranges."
msgstr ""
"O recurso requerido de requests para este container.  Por exemplo, 'cpu=100m,memory=256Mi'.  "
"Observe que os componentes do lado do servidor podem atribuir requests, dependendo da "
"configuração do servidor, como intervalos de limite."

#: pkg/kubectl/cmd/run.go:131
msgid ""
"The restart policy for this Pod.  Legal values [Always, OnFailure, Never].  If set to 'Always' a "
"deployment is created, if set to 'OnFailure' a job is created, if set to 'Never', a regular pod "
"is created. For the latter two --replicas must be 1.  Default 'Always', for CronJobs `Never`."
msgstr ""
"A politica de restart para este Pod.  Possíveis valores [Always, OnFailure, Never].  Se "
"configurado para 'Always' um deployment é criado, se configurado para 'OnFailure' um job é "
"criado, se configurado para 'Never', um pod é criado. Para os dois últimos —replicas deve ser "
"1.  Valor padrão 'Always', para CronJobs `Never`."

#: pkg/kubectl/cmd/create_secret.go:88
msgid "The type of secret to create"
msgstr "O tipo de segredo para criar"

#: pkg/kubectl/cmd/expose.go:102
msgid "Type for this service: ClusterIP, NodePort, or LoadBalancer. Default is 'ClusterIP'."
msgstr "Tipo para este serviço: ClusterIP, NodePort, ou LoadBalancer. Valor padrão é 'ClusterIP'."

#: pkg/kubectl/cmd/rollout/rollout_undo.go:72
msgid "Undo a previous rollout"
msgstr "Desfazer o rollout anterior"

#: pkg/kubectl/cmd/config/unset.go:48
msgid "Unsets an individual value in a kubeconfig file"
msgstr "Remover um valor individual do arquivo kubeconfig"

#: pkg/kubectl/cmd/patch.go:96
msgid "Update field(s) of a resource using strategic merge patch"
msgstr "Atualizar o(s) campo(s) de um recurso usando a estratégia de merge patch"

#: pkg/kubectl/cmd/set/set_image.go:95
msgid "Update image of a pod template"
msgstr "Atualizar a imagem de um template de pod"

#: pkg/kubectl/cmd/set/set_resources.go:102
msgid "Update resource requests/limits on objects with pod templates"
msgstr "Atualizar os recursos de request/limites em um objeto com template de pod"

#: pkg/kubectl/cmd/annotate.go:116
msgid "Update the annotations on a resource"
msgstr "Atualizar as anotações de um recurso"

#: pkg/kubectl/cmd/label.go:114
msgid "Update the labels on a resource"
msgstr "Atualizar os labels de um recurso"

#: pkg/kubectl/cmd/taint.go:87
msgid "Update the taints on one or more nodes"
msgstr "Atualizar o taints de um ou mais nodes"

#: pkg/kubectl/cmd/create_secret.go:156
msgid "Username for Docker registry authentication"
msgstr "Nome de usuário para a autenticação no Docker registry"

#: pkg/kubectl/cmd/apply_view_last_applied.go:64
msgid "View latest last-applied-configuration annotations of a resource/object"
msgstr "Visualizar a última anotação last-applied-configuration de um recurso/objeto"

#: pkg/kubectl/cmd/rollout/rollout_history.go:52
msgid "View rollout history"
msgstr "Visualizar o histórico de rollout"

#: pkg/kubectl/cmd/clusterinfo_dump.go:46
msgid ""
"Where to output the files.  If empty or '-' uses stdout, otherwise creates a directory hierarchy "
"in that directory"
msgstr ""
"Onde colocar os arquivos de saída. Se vazio ou '-' usa o stdout do terminal, caso contrário, "
"cria uma hierarquia no diretório configurado"

#: pkg/kubectl/cmd/run_test.go:85
msgid "dummy restart flag)"
msgstr "dummy restart flag)"

#: pkg/kubectl/cmd/create_service.go:254
msgid "external name of service"
msgstr "nome externo do serviço"

#: pkg/kubectl/cmd/cmd.go:227
msgid "kubectl controls the Kubernetes cluster manager"
msgstr "kubectl controla o gerenciador de cluster do Kubernetes"
